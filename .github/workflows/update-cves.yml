name: CVE Update

on:
  # 每5分钟运行一次
  schedule:
    - cron: '*/5 * * * *'
  # 允许手动触发
  workflow_dispatch:
    inputs:
      params:
        description: '命令行参数'
        required: false
        default: ''

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  update-cves:
    environment: deployment
    runs-on: ubuntu-latest
    env:
      CVE_SERVICES_URL: https://cveawg.mitre.org
      CVE_SERVICES_RECORDS_PER_PAGE: 500
      CVE_ORG_URL: https://www.cve.org
      CVES_BASE_DIRECTORY: data
      CVES_RECENT_ACTIVITIES_FILENAME: recent_activities.json
      CVES_DEFAULT_UPDATE_LOOKBACK_IN_MINS: 180
      CVES_DEFAULT_DELTA_LOG_HISTORY_IN_DAYS: 30
      DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-dev libxslt1-dev python3-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --only-binary :all: lxml==4.9.3
          pip install -e .

      - name: Update CVEs
        run: |
          # 设置时间戳
          export TEMP_TIMESTAMP=$(date '+%Y-%m-%d_%H%M_UTC')
          echo "out=$TEMP_TIMESTAMP" >> $GITHUB_OUTPUT
          
          # 拉取最新更改
          git pull
          
          # 配置 Git
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "CVE Monitor Github Action"
          
          # 创建日志目录
          mkdir -p logs
          
          # 运行更新脚本
          python scripts/update_cves.py
          
          # 更新 deltaLog.json
          if [ ! -f "$CVES_BASE_DIRECTORY/deltaLog.json" ]; then
            echo '[{"fetchTime":"2024-02-19T00:00:00Z","count":0}]' > "$CVES_BASE_DIRECTORY/deltaLog.json"
          fi
          
          NOW_TS=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          TOTAL_COUNT=$(jq -r '.metadata.total_count' "$CVES_BASE_DIRECTORY/cves.json")
          NEW_ENTRY="{\"fetchTime\":\"$NOW_TS\",\"count\":$TOTAL_COUNT}"
          
          # 保持最近30天的记录
          jq --argjson entry "$NEW_ENTRY" '. [($entry)] + .[0:29]' \
            "$CVES_BASE_DIRECTORY/deltaLog.json" > "$CVES_BASE_DIRECTORY/deltaLog.json.tmp"
          mv "$CVES_BASE_DIRECTORY/deltaLog.json.tmp" "$CVES_BASE_DIRECTORY/deltaLog.json"

      - name: Commit and push if changed
        run: |
          git add data/ logs/
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update CVE data and logs" && git push) 