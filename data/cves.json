{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "total_count": 2,
    "last_updated": "2025-10-28T15:41:41.308602",
    "severity_distribution": {
      "critical": 0,
      "high": 0,
      "medium": 0,
      "low": 0,
      "none": 2
    }
  },
  "cves": [
    {
      "id": "CVE-2025-41090",
      "publishedDate": "2025-10-28T09:17:08.128Z",
      "lastModifiedDate": "2025-10-28T15:35:02.579Z",
      "description": "microCLAUDIA in v3.2.0 and prior has an improper access control vulnerability.\n\nThis flaw allows an authenticated user to perform unauthorized actions on other organizations' systems by sending direct API requests. To do so, the attacker can use organization identifiers obtained through a compromised endpoint or deduced manually.\n\nThis vulnerability allows access between tenants, enabling an attacker to list and manage remote assets, uninstall agents, and even delete vaccines configurations.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://www.incibe.es/en/incibe-cert/notices/aviso/improper-access-control-ccn-cert-microclaudia",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "defaultStatus": "unaffected",
          "product": "microCLAUDIA",
          "vendor": "CCN-CERT",
          "versions": [
            {
              "status": "affected",
              "version": "3.2.0"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-306 Missing Authentication for Critical Function"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-56399",
      "publishedDate": "2025-10-28T00:00:00.000Z",
      "lastModifiedDate": "2025-10-28T15:35:55.169Z",
      "description": "alexusmai laravel-file-manager 3.3.1 and before allows an authenticated attacker to achieve Remote Code Execution (RCE) through a crafted file upload. A file with a '.png` extension containing PHP code can be uploaded via the file manager interface. Although the upload appears to fail client-side validation, the file is still saved on the server. The attacker can then use the rename API to change the file extension to `.php`, and upon accessing it via a public URL, the server executes the embedded code.",
      "severity": "N/A",
      "references": [
        {
          "url": "http://laravel-file-manager.com",
          "type": "reference"
        },
        {
          "url": "https://github.com/Theethat-Thamwasin/CVE-2025-56399",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "n/a",
          "product": "n/a",
          "versions": [
            {
              "version": "n/a",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "n/a"
      ],
      "fix_suggestion": "无法生成修复建议"
    }
  ]
}