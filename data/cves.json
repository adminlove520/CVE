{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "total_count": 2,
    "last_updated": "2025-08-27T15:37:54.066843",
    "severity_distribution": {
      "critical": 0,
      "high": 1,
      "medium": 0,
      "low": 0,
      "none": 1
    }
  },
  "cves": [
    {
      "id": "CVE-2025-9505",
      "publishedDate": "2025-08-27T03:32:09.318Z",
      "lastModifiedDate": "2025-08-27T15:28:33.809Z",
      "description": "A flaw has been found in Campcodes Online Loan Management System 1.0. Affected by this issue is some unknown functionality of the file /ajax.php?action=save_loan_type. This manipulation of the argument ID causes sql injection. The attack is possible to be carried out remotely. The exploit has been published and may be used.",
      "severity": 7.3,
      "references": [
        {
          "url": "https://vuldb.com/?id.321488",
          "type": "reference"
        },
        {
          "url": "https://vuldb.com/?ctiid.321488",
          "type": "reference"
        },
        {
          "url": "https://vuldb.com/?submit.638139",
          "type": "reference"
        },
        {
          "url": "https://github.com/Sxxxw/cve/issues/1",
          "type": "poc"
        },
        {
          "url": "https://www.campcodes.com/",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "Campcodes",
          "product": "Online Loan Management System",
          "versions": [
            {
              "version": "1.0",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "SQL Injection",
        "Injection"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-50978",
      "publishedDate": "2025-08-27T00:00:00.000Z",
      "lastModifiedDate": "2025-08-27T15:28:16.580Z",
      "description": "In Gitblit v1.7.1, a reflected cross-site scripting (XSS) vulnerability exists in the way repository path names are handled. By injecting a specially crafted path payload an attacker can cause arbitrary JavaScript to execute when a victim views the manipulated URL. This flaw stems from insufficient input sanitization of filename elements.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/4rdr/proofs/blob/main/info/gitblit-v1.7.1-reflected-XSS-via-filenames.md",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "n/a",
          "product": "n/a",
          "versions": [
            {
              "version": "n/a",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "n/a"
      ],
      "fix_suggestion": "无法生成修复建议"
    }
  ]
}