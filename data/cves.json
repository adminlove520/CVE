{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "total_count": 2,
    "last_updated": "2025-04-22T08:56:39.086233",
    "severity_distribution": {
      "critical": 0,
      "high": 0,
      "medium": 0,
      "low": 0,
      "none": 2
    }
  },
  "cves": [
    {
      "id": "CVE-2025-3519",
      "publishedDate": "2025-04-22T08:51:41.681Z",
      "lastModifiedDate": "2025-04-22T08:51:41.681Z",
      "description": "An authorization bypass in Unblu Spark allows a participant of a conversation to replace an existing, uploaded file.\n\nEvery uploaded file in Unblu gets assigned with a randomly generated Universally Unique ID (UUID). In case a participant of this or another conversation gets access to such a file ID, it can be used to replace the file without changing the file name and details or the name of the user who uploaded the file. During the upload, file interception and allowed file type rules are still applied correctly.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://www.unblu.com/en/docs/latest/security-bulletins/#UBL-2025-001",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "defaultStatus": "unknown",
          "product": "Unblu Spark",
          "vendor": "Unblu inc.",
          "versions": [
            {
              "status": "unaffected",
              "version": "8.13.1",
              "versionType": "semver"
            },
            {
              "lessThanOrEqual": "8.12.1",
              "status": "affected",
              "version": "8.0.0",
              "versionType": "semver"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-639 Authorization Bypass Through User-Controlled Key"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-3518",
      "publishedDate": "2025-04-22T08:49:56.073Z",
      "lastModifiedDate": "2025-04-22T08:51:07.759Z",
      "description": "It technically possible for a user to upload a file to a conversation despite the file upload functionality being disabled.\n\nThe file upload functionality can be enabled or disabled for specific use cases through configuration. In case the functionality is disabled for at least one use case, the system nevertheless allows files to be uploaded through direct API requests. During the upload file, interception and allowed file type rules are still applied correctly.\n\nIf file sharing is generally enabled, this issue is not of concern.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://www.unblu.com/en/docs/latest/security-bulletins/#UBL-2025-002",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "defaultStatus": "unknown",
          "product": "Unblu Spark",
          "vendor": "Unblu inc.",
          "versions": [
            {
              "status": "unaffected",
              "version": "7.54.1",
              "versionType": "semver"
            },
            {
              "status": "unaffected",
              "version": "8.13.1",
              "versionType": "semver"
            },
            {
              "lessThanOrEqual": "7.53.4",
              "status": "affected",
              "version": "7.0.0",
              "versionType": "semver"
            },
            {
              "lessThanOrEqual": "8.12.1",
              "status": "affected",
              "version": "8.0.0",
              "versionType": "semver"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    }
  ]
}