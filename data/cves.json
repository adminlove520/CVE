{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "total_count": 2,
    "last_updated": "2025-03-14T19:15:48.727056",
    "severity_distribution": {
      "critical": 0,
      "high": 0,
      "medium": 0,
      "low": 0,
      "none": 2
    }
  },
  "cves": [
    {
      "id": "CVE-2025-29782",
      "publishedDate": "2025-03-14T19:05:40.774Z",
      "lastModifiedDate": "2025-03-14T19:05:40.774Z",
      "description": "WeGIA is Web manager for charitable institutions A Stored Cross-Site Scripting (XSS) vulnerability was identified in the `adicionar_tipo_docs_atendido.php` endpoint in versions of the WeGIA application prior to 3.2.17. This vulnerability allows attackers to inject malicious scripts into the `tipo` parameter. The injected scripts are stored on the server and executed automatically whenever the affected page is accessed by users, posing a significant security risk. Version 3.2.17 contains a patch for the issue.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/LabRedesCefetRJ/WeGIA/security/advisories/GHSA-5x5w-5c99-vr8h",
          "type": "reference"
        },
        {
          "url": "https://github.com/LabRedesCefetRJ/WeGIA/releases/tag/v3.2.17",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "LabRedesCefetRJ",
          "product": "WeGIA",
          "versions": [
            {
              "version": "< 3.2.17",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-29771",
      "publishedDate": "2025-03-14T18:56:24.504Z",
      "lastModifiedDate": "2025-03-14T19:06:37.288Z",
      "description": "HtmlSanitizer is a client-side HTML Sanitizer. Versions prior to 2.0.3 have a cross-site scripting vulnerability when the sanitizer is used with a `contentEditable` element to set the elements `innerHTML` to a sanitized string produced by the package. If the code is particularly crafted to abuse the code beautifier, that runs AFTER sanitation. The issue is patched in version 2.0.3.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/jitbit/HtmlSanitizer/security/advisories/GHSA-vhv4-fh94-jm5x",
          "type": "reference"
        },
        {
          "url": "https://github.com/jitbit/HtmlSanitizer/commit/af6d2a78877e7277cd01c825b7fb50edb5956963",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "jitbit",
          "product": "HtmlSanitizer",
          "versions": [
            {
              "version": "< 2.0.3",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    }
  ]
}