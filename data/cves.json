{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "total_count": 4,
    "last_updated": "2025-05-13T16:11:21.097356",
    "severity_distribution": {
      "critical": 0,
      "high": 0,
      "medium": 1,
      "low": 0,
      "none": 3
    }
  },
  "cves": [
    {
      "id": "CVE-2024-51447",
      "publishedDate": "2025-05-13T09:38:25.452Z",
      "lastModifiedDate": "2025-05-13T15:57:37.712Z",
      "description": "A vulnerability has been identified in Polarion V2310 (All versions), Polarion V2404 (All versions < V2404.2). The login implementation of the affected application contains an observable response discrepancy vulnerability when validating usernames. This could allow an unauthenticated remote attacker to distinguish between valid and invalid usernames.",
      "severity": 5.3,
      "references": [
        {
          "url": "https://cert-portal.siemens.com/productcert/html/ssa-162255.html",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "Siemens",
          "product": "Polarion V2310",
          "versions": [
            {
              "status": "affected",
              "version": "0",
              "lessThan": "*",
              "versionType": "custom"
            }
          ],
          "defaultStatus": "unknown"
        },
        {
          "vendor": "Siemens",
          "product": "Polarion V2404",
          "versions": [
            {
              "status": "affected",
              "version": "0",
              "lessThan": "V2404.2",
              "versionType": "custom"
            }
          ],
          "defaultStatus": "unknown"
        }
      ],
      "problemType": [
        "CWE-204: Observable Response Discrepancy"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-47278",
      "publishedDate": "2025-05-13T15:57:40.409Z",
      "lastModifiedDate": "2025-05-13T15:57:40.409Z",
      "description": "Flask is a web server gateway interface (WSGI) web application framework. In Flask 3.1.0, the way fallback key configuration was handled resulted in the last fallback key being used for signing, rather than the current signing key. Signing is provided by the `itsdangerous` library. A list of keys can be passed, and it expects the last (top) key in the list to be the most recent key, and uses that for signing. Flask was incorrectly constructing that list in reverse, passing the signing key first. Sites that have opted-in to use key rotation by setting `SECRET_KEY_FALLBACKS` care likely to unexpectedly be signing their sessions with stale keys, and their transition to fresher keys will be impeded. Sessions are still signed, so this would not cause any sort of data integrity loss. Version 3.1.1 contains a patch for the issue.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/pallets/flask/security/advisories/GHSA-4grg-w6v8-c28g",
          "type": "reference"
        },
        {
          "url": "https://github.com/pallets/flask/commit/73d6504063bfa00666a92b07a28aaf906c532f09",
          "type": "reference"
        },
        {
          "url": "https://github.com/pallets/flask/releases/tag/3.1.1",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "pallets",
          "product": "flask",
          "versions": [
            {
              "version": "= 3.1.0",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-683: Function Call With Incorrect Order of Arguments"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-47204",
      "publishedDate": "2025-05-13T00:00:00.000Z",
      "lastModifiedDate": "2025-05-13T15:58:00.907Z",
      "description": "An issue was discovered in post.php in bootstrap-multiselect (aka Bootstrap Multiselect) 1.1.2. A PHP script in the source code echoes arbitrary POST data. If a developer adopts this structure wholesale in a live application, it could create a Reflective Cross-Site Scripting (XSS) vulnerability exploitable through Cross-Site Request Forgery (CSRF).",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/davidstutz/bootstrap-multiselect/releases",
          "type": "reference"
        },
        {
          "url": "https://github.com/projectdiscovery/nuclei-templates/commit/11e1a6c11d3954f44acfb0274b6dad4bd8045103",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "n/a",
          "product": "n/a",
          "versions": [
            {
              "version": "n/a",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "n/a"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2024-55466",
      "publishedDate": "2025-05-12T00:00:00.000Z",
      "lastModifiedDate": "2025-05-13T15:56:01.549Z",
      "description": "An arbitrary file upload vulnerability in the Image Gallery of ThingsBoard Community, ThingsBoard Cloud and ThingsBoard Professional v3.8.1 allows attackers to execute arbitrary code via uploading a crafted file.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/thingsboard/thingsboard/releases/tag/v3.8.1",
          "type": "reference"
        },
        {
          "url": "https://github.com/cybsecsid/ThingsBoard-IoT-Platform-CVE-2024-55466",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "n/a",
          "product": "n/a",
          "versions": [
            {
              "version": "n/a",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "n/a"
      ],
      "fix_suggestion": "无法生成修复建议"
    }
  ]
}