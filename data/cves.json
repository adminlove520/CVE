{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "total_count": 4,
    "last_updated": "2025-02-20T20:27:06.247511",
    "severity_distribution": {
      "critical": 0,
      "high": 0,
      "medium": 2,
      "low": 0,
      "none": 2
    }
  },
  "cves": [
    {
      "id": "CVE-2025-27098",
      "publishedDate": "2025-02-20T20:13:01.242Z",
      "lastModifiedDate": "2025-02-20T20:13:17.690Z",
      "description": "GraphQL Mesh is a GraphQL Federation framework and gateway for both GraphQL Federation and non-GraphQL Federation subgraphs, non-GraphQL services, such as REST and gRPC, and also databases such as MongoDB, MySQL, and PostgreSQL. Missing check vulnerability in the static file handler allows any client to access the files in the server's file system. When `staticFiles` is set in the `serve` settings in the configuration file, the following handler doesn't check if `absolutePath` is still under the directory provided as `staticFiles`. Users have two options to fix vulnerability; 1. Update `@graphql-mesh/cli` to a version higher than `0.82.21`, and if you use `@graphql-mesh/http`, update it to a version higher than `0.3.18` 2. Remove `staticFiles` option from the configuration, and use other solutions to serve static files.",
      "severity": 5.8,
      "references": [
        {
          "url": "https://github.com/ardatan/graphql-mesh/security/advisories/GHSA-j2wh-wrv3-4x4g",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "ardatan",
          "product": "graphql-mesh",
          "versions": [
            {
              "version": "@graphql-mesh/cli: >= 0.78.0, < 0.82.22",
              "status": "affected"
            },
            {
              "version": "@graphql-mesh/http: < 0.3.19",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-24947",
      "publishedDate": "2025-02-20T00:00:00.000Z",
      "lastModifiedDate": "2025-02-20T20:19:05.607Z",
      "description": "A hash collision vulnerability (in the hash table used to manage connections) in LSQUIC (aka LiteSpeed QUIC) before 4.2.0 allows remote attackers to cause a considerable CPU load on the server (a Hash DoS attack) by initiating connections with colliding Source Connection IDs (SCIDs). This is caused by XXH32 usage.",
      "severity": 5.3,
      "references": [
        {
          "url": "https://xxhash.com",
          "type": "reference"
        },
        {
          "url": "https://github.com/ncc-pbottine/QUIC-Hash-Dos-Advisory",
          "type": "reference"
        },
        {
          "url": "https://github.com/litespeedtech/lsquic/releases/tag/v4.2.0",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "defaultStatus": "unaffected",
          "product": "LSQUIC",
          "vendor": "litespeedtech",
          "versions": [
            {
              "lessThan": "4.2.0",
              "status": "affected",
              "version": "0",
              "versionType": "semver"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-407 Inefficient Algorithmic Complexity"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-27097",
      "publishedDate": "2025-02-20T20:15:53.648Z",
      "lastModifiedDate": "2025-02-20T20:15:53.648Z",
      "description": "GraphQL Mesh is a GraphQL Federation framework and gateway for both GraphQL Federation and non-GraphQL Federation subgraphs, non-GraphQL services, such as REST and gRPC, and also databases such as MongoDB, MySQL, and PostgreSQL. When a user transforms on the root level or single source with transforms, and the client sends the same query with different variables, the initial variables are used in all following requests until the cache evicts DocumentNode. If a token is sent via variables, the following requests will act like the same token is sent even if the following requests have different tokens. This can cause a short memory leak but it won't grow per each request but per different operation until the cache evicts DocumentNode by LRU mechanism.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/ardatan/graphql-mesh/security/advisories/GHSA-rr4x-crhf-8886",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "ardatan",
          "product": "graphql-mesh",
          "versions": [
            {
              "version": "@graphql-mesh/runtime: >= 0.96.9, < 0.96.9",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-400: Uncontrolled Resource Consumption"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-27218",
      "publishedDate": "2025-02-20T00:00:00.000Z",
      "lastModifiedDate": "2025-02-20T20:17:06.228Z",
      "description": "Sitecore Experience Manager (XM) and Experience Platform (XP) 10.4 before KB1002844 allow remote code execution through insecure deserialization.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://support.sitecore.com/kb?id=kb_article_view&sysparm_article=KB1003535",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "n/a",
          "product": "n/a",
          "versions": [
            {
              "version": "n/a",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "n/a"
      ],
      "fix_suggestion": "无法生成修复建议"
    }
  ]
}