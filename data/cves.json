{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "total_count": 6,
    "last_updated": "2025-07-19T03:01:06.026411",
    "severity_distribution": {
      "critical": 0,
      "high": 0,
      "medium": 6,
      "low": 0,
      "none": 0
    }
  },
  "cves": [
    {
      "id": "CVE-2025-7653",
      "publishedDate": "2025-07-19T02:22:58.508Z",
      "lastModifiedDate": "2025-07-19T02:22:58.508Z",
      "description": "The EPay.bg Payments plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'epay' shortcode in all versions up to, and including, 0.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
      "severity": 6.4,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/7e35e79a-4838-4ed9-bd08-80e8f9043ec4?source=cve",
          "type": "reference"
        },
        {
          "url": "https://plugins.svn.wordpress.org/epaybg-payments/tags/0.1/epay-payments.php",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "vloo",
          "product": "EPay.bg Payments",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "0.1",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-7658",
      "publishedDate": "2025-07-19T02:22:57.969Z",
      "lastModifiedDate": "2025-07-19T02:22:57.969Z",
      "description": "The Temporarily Hidden Content plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'temphc-start' shortcode in all versions up to, and including, 1.0.6 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
      "severity": 6.4,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/67afe49c-3560-414b-b848-b91a03bf7556?source=cve",
          "type": "reference"
        },
        {
          "url": "https://plugins.svn.wordpress.org/temporarily-hidden-content/trunk/includes/class-temporarily-hidden-content-public.php",
          "type": "reference"
        },
        {
          "url": "https://plugins.svn.wordpress.org/temporarily-hidden-content/trunk/templates/countdown_view.tpl",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "codents",
          "product": "Temporarily Hidden Content",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "1.0.6",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-7661",
      "publishedDate": "2025-07-19T02:22:57.554Z",
      "lastModifiedDate": "2025-07-19T02:22:57.554Z",
      "description": "The Partnerský systém Martinus plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'martinus' shortcode in all versions up to, and including, 1.7.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
      "severity": 6.4,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/6500b559-4c26-47e8-b131-100ece3ca3bd?source=cve",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/browser/martinus-partnersky-system/tags/1.7.1/martinus-pp.php#L266",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "maxomatos",
          "product": "Partnerský systém Martinus",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "1.7.1",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-7655",
      "publishedDate": "2025-07-19T02:22:56.974Z",
      "lastModifiedDate": "2025-07-19T02:22:56.974Z",
      "description": "The Live Stream Badger plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'livestream' shortcode in all versions up to, and including, 1.4.3 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
      "severity": 6.4,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/22a30301-f409-4c53-84d7-7799fb41c25b?source=cve",
          "type": "reference"
        },
        {
          "url": "https://plugins.svn.wordpress.org/live-stream-badger/tags/1.4.3/shortcode/class-embedded-stream.php",
          "type": "reference"
        },
        {
          "url": "https://plugins.svn.wordpress.org/live-stream-badger/tags/1.4.3/view/class-embedded-twitch-view.php",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "tkrivickas",
          "product": "Live Stream Badger",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "1.4.3",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-7669",
      "publishedDate": "2025-07-19T02:22:58.889Z",
      "lastModifiedDate": "2025-07-19T02:22:58.889Z",
      "description": "The Avishi WP PayPal Payment Button plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 2.0. This is due to missing or incorrect nonce validation on the 'avishi-wp-paypal-payment-button/index.php' page. This makes it possible for unauthenticated attackers to update settings and inject malicious web scripts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.",
      "severity": 6.1,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/8416b394-28ae-41de-8784-2ae39f4d201f?source=cve",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/browser/avishi-wp-paypal-payment-button/trunk/index.php",
          "type": "reference"
        },
        {
          "url": "https://wordpress.org/plugins/avishi-wp-paypal-payment-button/",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "avishika",
          "product": "Avishi WP PayPal Payment Button",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "2.0",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-352 Cross-Site Request Forgery (CSRF)"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-52924",
      "publishedDate": "2025-07-19T00:00:00.000Z",
      "lastModifiedDate": "2025-07-19T02:14:29.023Z",
      "description": "In One Identity OneLogin before 2025.2.0, the SQL connection \"application name\" is set based on the value of an untrusted X-RequestId HTTP request header.",
      "severity": 4,
      "references": [
        {
          "url": "https://oneidentity.com",
          "type": "reference"
        },
        {
          "url": "https://onelogin.service-now.com/support?id=kb_article&sys_id=59fe4c3c972a2610c90c3b0e6253afef&kb_category=a0d76d70db185340d5505eea4b96199f",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "defaultStatus": "unaffected",
          "product": "OneLogin",
          "vendor": "One Identity",
          "versions": [
            {
              "lessThan": "2025.2.0",
              "status": "affected",
              "version": "0",
              "versionType": "custom"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
      ],
      "fix_suggestion": "无法生成修复建议"
    }
  ]
}