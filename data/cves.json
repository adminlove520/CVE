{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "total_count": 9,
    "last_updated": "2025-08-08T19:00:49.498253",
    "severity_distribution": {
      "critical": 1,
      "high": 0,
      "medium": 1,
      "low": 0,
      "none": 7
    }
  },
  "cves": [
    {
      "id": "CVE-2025-5095",
      "publishedDate": "2025-08-08T17:24:32.553Z",
      "lastModifiedDate": "2025-08-08T18:55:32.283Z",
      "description": "Burk Technology ARC Solo's password change mechanism can be utilized without proper \nauthentication procedures, allowing an attacker to take over the device.\n A password change request can be sent directly to the device's HTTP \nendpoint without providing valid credentials. The system does not \nenforce proper authentication or session validation, allowing the \npassword change to proceed without verifying the request's legitimacy.",
      "severity": 9.8,
      "references": [
        {
          "url": "https://www.cisa.gov/news-events/ics-advisories/icsa-25-219-03",
          "type": "reference"
        },
        {
          "url": "https://www.burk.com/products/Broadcast/ARC-Solo-6",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "defaultStatus": "unaffected",
          "product": "ARC Solo",
          "vendor": "Burk Technology",
          "versions": [
            {
              "lessThan": "1.0.62",
              "status": "affected",
              "version": "0",
              "versionType": "custom"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-306"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-8707",
      "publishedDate": "2025-08-08T02:02:06.472Z",
      "lastModifiedDate": "2025-08-08T18:56:15.754Z",
      "description": "A vulnerability was found in Huuge Box App 1.0.3 on Android. It has been classified as problematic. This affects an unknown part of the file AndroidManifest.xml of the component com.huuge.game.zjbox. The manipulation leads to improper export of android application components. Local access is required to approach this attack. The exploit has been disclosed to the public and may be used.",
      "severity": 5.3,
      "references": [
        {
          "url": "https://vuldb.com/?id.319137",
          "type": "reference"
        },
        {
          "url": "https://vuldb.com/?ctiid.319137",
          "type": "reference"
        },
        {
          "url": "https://vuldb.com/?submit.619858",
          "type": "reference"
        },
        {
          "url": "https://github.com/KMov-g/androidapps/blob/main/com.huuge.game.zjbox.md",
          "type": "reference"
        },
        {
          "url": "https://github.com/KMov-g/androidapps/blob/main/com.huuge.game.zjbox.md#steps-to-reproduce",
          "type": "poc"
        }
      ],
      "affected": [
        {
          "vendor": "Huuge",
          "product": "Box App",
          "versions": [
            {
              "version": "1.0.3",
              "status": "affected"
            }
          ],
          "modules": [
            "com.huuge.game.zjbox"
          ]
        }
      ],
      "problemType": [
        "Improper Export of Android Application Components"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2012-10053",
      "publishedDate": "2025-08-08T18:12:53.677Z",
      "lastModifiedDate": "2025-08-08T18:48:37.339Z",
      "description": "Simple Web Server 2.2 rc2 contains a stack-based buffer overflow vulnerability in its handling of the Connection HTTP header. When a remote attacker sends an overly long string in this header, the server uses vsprintf() without proper bounds checking, leading to a buffer overflow on the stack. This flaw allows remote attackers to execute arbitrary code with the privileges of the web server process. The vulnerability is triggered before authentication.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://raw.githubusercontent.com/rapid7/metasploit-framework/master/modules/exploits/windows/http/sws_connection_bof.rb",
          "type": "poc"
        },
        {
          "url": "https://www.exploit-db.com/exploits/19937",
          "type": "poc"
        },
        {
          "url": "https://www.exploit-db.com/exploits/20028",
          "type": "poc"
        },
        {
          "url": "http://ghostinthelab.wordpress.com/2012/07/19/simplewebserver-2-2-rc2-remote-buffer-overflow-exploit/",
          "type": "poc"
        },
        {
          "url": "http://www.pmx.it/software/sws.asp",
          "type": "reference"
        },
        {
          "url": "https://www.vulncheck.com/advisories/simple-web-server-connection-header-buffer-overflow",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "defaultStatus": "unknown",
          "modules": [
            "vsprintf()"
          ],
          "product": "Simple Web Server",
          "vendor": "PMSoftware",
          "versions": [
            {
              "status": "affected",
              "version": "2.2 rc2"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-121 Stack-based Buffer Overflow"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2012-10042",
      "publishedDate": "2025-08-08T18:12:32.270Z",
      "lastModifiedDate": "2025-08-08T18:49:25.841Z",
      "description": "Sflog! CMS 1.0 contains an authenticated arbitrary file upload vulnerability in the blog management interface. The application ships with default credentials (admin:secret) and allows authenticated users to upload files via manage.php. The upload mechanism fails to validate file types, enabling attackers to upload a PHP backdoor into a web-accessible directory (blogs/download/uploads/). Once uploaded, the file can be executed remotely, resulting in full remote code execution.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://raw.githubusercontent.com/rapid7/metasploit-framework/master/modules/exploits/multi/http/sflog_upload_exec.rb",
          "type": "poc"
        },
        {
          "url": "https://www.exploit-db.com/exploits/19626",
          "type": "poc"
        },
        {
          "url": "https://sourceforge.net/projects/sflog/",
          "type": "reference"
        },
        {
          "url": "https://www.vulncheck.com/advisories/sflog-cms-arbitrary-file-upload-rce",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "defaultStatus": "unknown",
          "modules": [
            "admin/manage.php"
          ],
          "product": "Sflog! CMS",
          "vendor": "Sflog!",
          "versions": [
            {
              "status": "affected",
              "version": "1.0"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-434 Unrestricted Upload of File with Dangerous Type"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2012-10036",
      "publishedDate": "2025-08-08T18:12:12.901Z",
      "lastModifiedDate": "2025-08-08T18:51:11.960Z",
      "description": "Project Pier 0.8.8 and earlier contains an unauthenticated arbitrary file upload vulnerability in tools/upload_file.php. The upload handler fails to validate the file type or enforce authentication, allowing remote attackers to upload malicious PHP files directly into a web-accessible directory. The uploaded file is stored with a predictable suffix and can be executed by requesting its URL, resulting in remote code execution.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://raw.githubusercontent.com/rapid7/metasploit-framework/master/modules/exploits/unix/webapp/projectpier_upload_exec.rb",
          "type": "poc"
        },
        {
          "url": "https://www.exploit-db.com/exploits/21929",
          "type": "poc"
        },
        {
          "url": "https://packetstorm.news/files/id/117070",
          "type": "poc"
        },
        {
          "url": "https://web.archive.org/web/20120111090432/http://www.projectpier.org/",
          "type": "reference"
        },
        {
          "url": "https://www.opensourcecms.com/projectpier/",
          "type": "reference"
        },
        {
          "url": "https://www.vulncheck.com/advisories/project-pier-arbitrary-file-upload-rce",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "defaultStatus": "unaffected",
          "modules": [
            "tools/upload_file.php"
          ],
          "product": "ProjectPier",
          "vendor": "ProjectPier",
          "versions": [
            {
              "lessThanOrEqual": "0.8.8",
              "status": "affected",
              "version": "*",
              "versionType": "semver"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-434 Unrestricted Upload of File with Dangerous Type"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2012-10051",
      "publishedDate": "2025-08-08T18:11:52.527Z",
      "lastModifiedDate": "2025-08-08T18:52:12.362Z",
      "description": "Photodex ProShow Producer version 5.0.3256 contains a stack-based buffer overflow vulnerability in the handling of plugin load list files. When a specially crafted load file is placed in the installation directory, the application fails to properly validate its contents, leading to a buffer overflow when the file is parsed during startup. Exploitation requires local access to place the file and user interaction to launch the application.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://raw.githubusercontent.com/rapid7/metasploit-framework/master/modules/exploits/windows/fileformat/proshow_load_bof.rb",
          "type": "poc"
        },
        {
          "url": "https://www.exploit-db.com/exploits/19563",
          "type": "poc"
        },
        {
          "url": "https://www.exploit-db.com/exploits/20109",
          "type": "poc"
        },
        {
          "url": "https://web.archive.org/web/20120727035341/http://security.inshell.net/advisory/30",
          "type": "poc"
        },
        {
          "url": "https://www.fortiguard.com/encyclopedia/ips/32753",
          "type": "reference"
        },
        {
          "url": "https://erinkrespan.com/what-happened-to-photodex-proshow-producer/",
          "type": "reference"
        },
        {
          "url": "https://archive.org/details/PhotodexProShowProducer7.0.3514Keymaker_20180127",
          "type": "reference"
        },
        {
          "url": "https://www.vulncheck.com/advisories/photodex-proshow-producer-load-file-handling-buffer-overflow",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "defaultStatus": "unknown",
          "modules": [
            "Plugin loader"
          ],
          "product": "ProShow Producer",
          "vendor": "Photodex Corporation",
          "versions": [
            {
              "status": "affected",
              "version": "5.0.3256"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-121  Stack-based Buffer Overflow"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2012-10044",
      "publishedDate": "2025-08-08T18:11:31.472Z",
      "lastModifiedDate": "2025-08-08T18:53:06.053Z",
      "description": "MobileCartly version 1.0 contains an arbitrary file creation vulnerability in the savepage.php script. The application fails to perform authentication or authorization checks before invoking file_put_contents() on attacker-controlled input. An unauthenticated attacker can exploit this flaw by sending crafted HTTP GET requests to savepage.php, specifying both the filename and content. This allows arbitrary file creation within the pages/ directory or any writable path on the server, allowing remote code execution.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://raw.githubusercontent.com/rapid7/metasploit-framework/master/modules/exploits/multi/http/mobilecartly_upload_exec.rb",
          "type": "poc"
        },
        {
          "url": "https://www.exploit-db.com/exploits/20422",
          "type": "poc"
        },
        {
          "url": "https://www.exploit-db.com/exploits/21079",
          "type": "poc"
        },
        {
          "url": "https://web.archive.org/web/20120919081957/http://mobilecartly.com/",
          "type": "reference"
        },
        {
          "url": "https://www.vulncheck.com/advisories/mobilecartly-arbitrary-file-creation",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "defaultStatus": "unknown",
          "modules": [
            "savepage.php script in /includes/ directory"
          ],
          "product": "MobileCartly",
          "vendor": "MobileCartly",
          "versions": [
            {
              "status": "affected",
              "version": "1.0"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-434 Unrestricted Upload of File with Dangerous Type"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2012-10046",
      "publishedDate": "2025-08-08T18:11:08.292Z",
      "lastModifiedDate": "2025-08-08T18:54:01.060Z",
      "description": "The E-Mail Security Virtual Appliance (ESVA) (tested on version ESVA_2057) contains an unauthenticated command injection vulnerability in the learn-msg.cgi script. The CGI handler fails to sanitize user-supplied input passed via the id parameter, allowing attackers to inject arbitrary shell commands. Exploitation requires no authentication and results in full command execution on the underlying system.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://sourceforge.net/projects/esva-project/",
          "type": "reference"
        },
        {
          "url": "https://raw.githubusercontent.com/rapid7/metasploit-framework/master/modules/exploits/linux/http/esva_exec.rb",
          "type": "poc"
        },
        {
          "url": "https://www.exploit-db.com/exploits/20551",
          "type": "poc"
        },
        {
          "url": "https://www.exploit-db.com/exploits/20712",
          "type": "poc"
        },
        {
          "url": "https://www.vulncheck.com/advisories/email-security-virtual-appliance-command-injection",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "defaultStatus": "unknown",
          "modules": [
            "cgi-bin/learn-msg.cgi"
          ],
          "product": "E-Mail Security Virtual Appliance",
          "vendor": "ESVA-Project",
          "versions": [
            {
              "status": "affected",
              "version": "ESVA_2057"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2012-10052",
      "publishedDate": "2025-08-08T18:10:46.550Z",
      "lastModifiedDate": "2025-08-08T18:55:06.700Z",
      "description": "EGallery version 1.2 contains an unauthenticated arbitrary file upload vulnerability in the uploadify.php script. The application fails to validate file types or enforce authentication, allowing remote attackers to upload malicious PHP files directly into the web-accessible egallery/ directory. This results in full remote code execution under the web server context.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://raw.githubusercontent.com/rapid7/metasploit-framework/master/modules/exploits/unix/webapp/egallery_upload_exec.rb",
          "type": "poc"
        },
        {
          "url": "https://www.exploit-db.com/exploits/20029",
          "type": "poc"
        },
        {
          "url": "http://web.archive.org/web/20170128123244/http://www.opensyscom.fr/Actualites/egallery-arbitrary-file-upload-vulnerability.html",
          "type": "poc"
        },
        {
          "url": "https://sourceforge.net/projects/e-gallery/",
          "type": "reference"
        },
        {
          "url": "https://www.vulncheck.com/advisories/egallery-arbitrary-php-file-upload",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "defaultStatus": "unknown",
          "modules": [
            "/egallery/uploadify.php"
          ],
          "product": "EGallery",
          "vendor": "EGallery",
          "versions": [
            {
              "status": "affected",
              "version": "1.2"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-434 Unrestricted Upload of File with Dangerous Type"
      ],
      "fix_suggestion": "无法生成修复建议"
    }
  ]
}