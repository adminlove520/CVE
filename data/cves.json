{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "total_count": 5,
    "last_updated": "2025-07-28T20:42:22.477063",
    "severity_distribution": {
      "critical": 2,
      "high": 0,
      "medium": 1,
      "low": 0,
      "none": 2
    }
  },
  "cves": [
    {
      "id": "CVE-2025-54419",
      "publishedDate": "2025-07-28T19:47:46.584Z",
      "lastModifiedDate": "2025-07-28T20:22:19.865Z",
      "description": "A SAML library not dependent on any frameworks that runs in Node. In versions 5.0.1 and below, Node-SAML loads the assertion from the (unsigned) original response document. This is different than the parts that are verified when checking signature. This allows an attacker to modify authentication details within a valid SAML assertion. For example, in one attack it is possible to remove any character from the SAML assertion username. To conduct the attack an attacker would need a validly signed document from the identity provider (IdP). This is fixed in version 5.1.0.",
      "severity": 10,
      "references": [
        {
          "url": "https://github.com/node-saml/node-saml/security/advisories/GHSA-4mxg-3p6v-xgq3",
          "type": "reference"
        },
        {
          "url": "https://github.com/node-saml/node-saml/commit/31ead9411ebc3e2385086fa9149b6c17732bca10",
          "type": "reference"
        },
        {
          "url": "https://github.com/node-saml/node-saml/releases/tag/v5.1.0",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "node-saml",
          "product": "node-saml",
          "versions": [
            {
              "version": "< 5.1.0",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-287: Improper Authentication",
        "CWE-347: Improper Verification of Cryptographic Signature"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-54428",
      "publishedDate": "2025-07-28T20:28:02.575Z",
      "lastModifiedDate": "2025-07-28T20:28:02.575Z",
      "description": "RevelaCode is an AI-powered faith-tech project that decodes biblical verses, prophecies and global events into accessible language. In versions below 1.0.1, a valid MongoDB Atlas URI with embedded username and password was accidentally committed to the public repository. This could allow unauthorized access to production or staging databases, potentially leading to data exfiltration, modification, or deletion. This is fixed in version 1.0.1. Workarounds include: immediately rotating credentials for the exposed database user, using a secret manager (like Vault, Doppler, AWS Secrets Manager, etc.) instead of storing secrets directly in code, or auditing recent access logs for suspicious activity.",
      "severity": 9.8,
      "references": [
        {
          "url": "https://github.com/musombi123/RevelaCode-Backend/security/advisories/GHSA-m253-qvcr-cr48",
          "type": "reference"
        },
        {
          "url": "https://github.com/musombi123/RevelaCode-Backend/commit/95005cf4bacf1b005aef9d4b8e85237c98492d83",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "musombi123",
          "product": "RevelaCode-Backend",
          "versions": [
            {
              "version": "< 1.0.1",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-522: Insufficiently Protected Credentials"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-54423",
      "publishedDate": "2025-07-28T19:53:24.109Z",
      "lastModifiedDate": "2025-07-28T20:20:15.875Z",
      "description": "copyparty is a portable file server. In versions up to and including versions 1.18.4, an unauthenticated attacker is able to execute arbitrary JavaScript code in a victim's browser due to improper sanitization of multimedia tags in music files, including m3u files. This is fixed in version 1.18.5.",
      "severity": 5.4,
      "references": [
        {
          "url": "https://github.com/9001/copyparty/security/advisories/GHSA-9q4r-x2hj-jmvr",
          "type": "reference"
        },
        {
          "url": "https://github.com/9001/copyparty/commit/895880aeb0be0813ddf732487596633f8f9fc3a6",
          "type": "reference"
        },
        {
          "url": "https://github.com/9001/copyparty/releases/tag/v1.18.5",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "9001",
          "product": "copyparty",
          "versions": [
            {
              "version": "< 1.18.5",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-54427",
      "publishedDate": "2025-07-28T20:20:04.064Z",
      "lastModifiedDate": "2025-07-28T20:20:04.064Z",
      "description": "Polkadot Frontier is an Ethereum and EVM compatibility layer for Polkadot and Substrate. The extrinsic note_min_gas_price_target is an inherent extrinsic, meaning only the block producer can call it. To ensure correctness, the ProvideInherent trait should be implemented for each inherent, which includes the check_inherent call. This allows other nodes to verify if the input (in this case, the target value) is correct. However, prior to commit a754b3d, the check_inherent function has not been implemented for note_min_gas_price_target. This lets the block producer set the target value without verification. The target is then used to set the MinGasPrice, which has an upper and lower bound defined in the on_initialize hook. The block producer can set the target to the upper bound. Which also increases the upper and lower bounds for the next block. Over time, this could result in continuously raising the gas price, making contract execution too expensive and ineffective for users. An attacker could use this flaw to manipulate the gas price, potentially leading to significantly inflated transaction fees. Such manipulation could render contract execution prohibitively expensive for users, effectively resulting in a denial-of-service condition for the network. This is fixed in version a754b3d.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/polkadot-evm/frontier/security/advisories/GHSA-r6rj-gmqh-cv94",
          "type": "reference"
        },
        {
          "url": "https://github.com/polkadot-evm/frontier/commit/a754b3dc6e1b6da98f71aea7bb1fa08677b24186",
          "type": "reference"
        },
        {
          "url": "https://dotpal.io/assets/files/frontier-srlabs-2505-718c3bfa5df9fed1862fed05de506859.pdf",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "polkadot-evm",
          "product": "frontier",
          "versions": [
            {
              "version": "< a754b3d",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-682: Incorrect Calculation",
        "CWE-754: Improper Check for Unusual or Exceptional Conditions"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-54426",
      "publishedDate": "2025-07-28T20:08:22.886Z",
      "lastModifiedDate": "2025-07-28T20:26:18.866Z",
      "description": "Polkadot Frontier is an Ethereum and EVM compatibility layer for Polkadot and Substrate. In versions prior to commit 36f70d1, the Curve25519Add and Curve25519ScalarMul precompiles incorrectly handle invalid Ristretto point representations. Instead of returning an error, they silently treat invalid input bytes as the Ristretto identity element, leading to potentially incorrect cryptographic results. This is fixed in commit 36f70d1.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/polkadot-evm/frontier/security/advisories/GHSA-v4q3-23rh-w5mw",
          "type": "reference"
        },
        {
          "url": "https://github.com/polkadot-evm/frontier/pull/1720/commits/8ed6053fb868495477ba2409f7e64f439df76f96",
          "type": "reference"
        },
        {
          "url": "https://github.com/polkadot-evm/frontier/commit/36f70d1defcaeaed5a453015f6c98c21bb5b121b",
          "type": "reference"
        },
        {
          "url": "https://dotpal.io/assets/files/frontier-srlabs-2505-718c3bfa5df9fed1862fed05de506859.pdf",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "polkadot-evm",
          "product": "frontier",
          "versions": [
            {
              "version": "< 36f70d1",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
      ],
      "fix_suggestion": "无法生成修复建议"
    }
  ]
}