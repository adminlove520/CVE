{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "total_count": 18,
    "last_updated": "2025-07-04T02:46:37.208776",
    "severity_distribution": {
      "critical": 0,
      "high": 6,
      "medium": 11,
      "low": 1,
      "none": 0
    }
  },
  "cves": [
    {
      "id": "CVE-2025-5953",
      "publishedDate": "2025-07-04T01:44:03.834Z",
      "lastModifiedDate": "2025-07-04T01:44:03.834Z",
      "description": "The WP Human Resource Management plugin for WordPress is vulnerable to Privilege Escalation due to missing authorization in the ajax_insert_employee() and update_empoyee() functions in versions 2.0.0 through 2.2.17. The AJAX handler reads the client-supplied $_POST['role'] and, after basic cleaning via hrm_clean(), passes it directly to wp_insert_user() and later to $user->set_role() without verifying that the current user is allowed to assign that role. This makes it possible for authenticated attackers, with Employee-level access and above, to elevate their privileges to administrator.",
      "severity": 8.8,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/3ba33a18-429f-4a3e-b018-bdfbbe6e8482?source=cve",
          "type": "reference"
        },
        {
          "url": "https://wordpress.org/plugins/hrm/#developers",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/browser/hrm/tags/2.2.17/class/employee.php#L89",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/browser/hrm/tags/2.2.17/class/employee.php#L543",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/browser/hrm/tags/2.2.17/class/employee.php#L591",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "asaquzzaman",
          "product": "WP Human Resource Management",
          "versions": [
            {
              "version": "2.0.0",
              "status": "affected",
              "lessThanOrEqual": "2.2.17",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-862 Missing Authorization"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-6238",
      "publishedDate": "2025-07-04T01:44:02.327Z",
      "lastModifiedDate": "2025-07-04T01:44:02.327Z",
      "description": "The AI Engine plugin for WordPress is vulnerable to open redirect in version 2.8.4. This is due to an insecure OAuth implementation, as the 'redirect_uri' parameter is missing validation during the authorization flow. This makes it possible for unauthenticated attackers to intercept the authorization code and obtain an access token by redirecting the user to an attacker-controlled URI. Note: OAuth is disabled, the 'Meow_MWAI_Labs_OAuth' class is not loaded in the plugin in the patched version 2.8.5.",
      "severity": 8,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/1edc84fd-8cb5-4899-9444-1b6ae3144917?source=cve",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/browser/ai-engine/tags/2.8.4/labs/oauth.php",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/changeset/3321384/ai-engine/trunk/labs/mcp.php",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/changeset/3321384/ai-engine/trunk/labs/oauth.php",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "tigroumeow",
          "product": "AI Engine",
          "versions": [
            {
              "version": "2.8.4",
              "status": "affected"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-601 URL Redirection to Untrusted Site ('Open Redirect')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-6782",
      "publishedDate": "2025-07-04T01:44:05.670Z",
      "lastModifiedDate": "2025-07-04T01:44:05.670Z",
      "description": "The GoZen Forms plugin for WordPress is vulnerable to SQL Injection via the 'forms-id' parameter of the dirGZActiveForm() function in all versions up to, and including, 1.1.5 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.",
      "severity": 7.5,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/d874a041-1cd4-4ca1-85bd-4050630d8502?source=cve",
          "type": "reference"
        },
        {
          "url": "https://wordpress.org/plugins/gozen-forms/",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "optinlyhq",
          "product": "GoZen Forms",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "1.1.5",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-6783",
      "publishedDate": "2025-07-04T01:44:04.943Z",
      "lastModifiedDate": "2025-07-04T01:44:04.943Z",
      "description": "The GoZen Forms plugin for WordPress is vulnerable to SQL Injection via the 'forms-id' parameter of the emdedSc() function in all versions up to, and including, 1.1.5 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.",
      "severity": 7.5,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/784998a7-550d-4299-9995-af01e5ee1d21?source=cve",
          "type": "reference"
        },
        {
          "url": "https://wordpress.org/plugins/gozen-forms/",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "optinlyhq",
          "product": "GoZen Forms",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "1.1.5",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-6814",
      "publishedDate": "2025-07-04T01:44:04.204Z",
      "lastModifiedDate": "2025-07-04T01:44:04.204Z",
      "description": "The Booking X plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the export_now() function in versions 1.0 to 1.1.2. This makes it possible for unauthenticated attackers to download all plugin data, including user accounts, user meta, and PayPal credentials, by issuing a crafted POST request.",
      "severity": 7.5,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/6a30d572-e086-4b83-8cb7-4cef9a3253bd?source=cve",
          "type": "reference"
        },
        {
          "url": "https://wordpress.org/plugins/booking-x/#developers",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/browser/booking-x/tags/1.1.2/admin/class-bookingx-admin.php#L784",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/browser/booking-x/tags/1.1.2/includes/class-bookingx.php#L322",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "dunskii",
          "product": "Booking X – Appointment and Reservation Availability Calendar",
          "versions": [
            {
              "version": "1.0",
              "status": "affected",
              "lessThanOrEqual": "1.1.2",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-862 Missing Authorization"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-6586",
      "publishedDate": "2025-07-04T01:44:03.464Z",
      "lastModifiedDate": "2025-07-04T01:44:03.464Z",
      "description": "The Download Plugin plugin for WordPress is vulnerable to arbitrary file uploads due to missing file type validation in the dpwap_plugin_locInstall function in all versions up to, and including, 2.2.8. This makes it possible for authenticated attackers, with Administrator-level access and above, to upload arbitrary files on the affected site's server which may make remote code execution possible.",
      "severity": 7.2,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/37734c25-cce3-41fb-babf-714ba7a4bced?source=cve",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/browser/download-plugin/tags/2.2.8/app/Plugins/Dpwapuploader.php#L300",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "metagauss",
          "product": "Download Plugin",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "2.2.8",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-434 Unrestricted Upload of File with Dangerous Type"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-5956",
      "publishedDate": "2025-07-04T01:44:02.706Z",
      "lastModifiedDate": "2025-07-04T01:44:02.706Z",
      "description": "The WP Human Resource Management plugin for WordPress is vulnerable to Arbitrary User Deletion due to a missing authorization within the ajax_delete_employee() function in versions 2.0.0 through 2.2.17. The plugin’s deletion handler reads the client-supplied $_POST['delete'] array and passes each ID directly to wp_delete_user() without verifying that the caller has the delete_users capability or limiting which user IDs may be removed. This makes it possible for authenticated attackers, with Employee-level access and above, to delete arbitrary accounts, including administrators.",
      "severity": 6.5,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/28cf0f3f-0048-4da9-aa86-243479f7b974?source=cve",
          "type": "reference"
        },
        {
          "url": "https://wordpress.org/plugins/hrm/#developers",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/browser/hrm/tags/2.2.17/class/employee.php#L48",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "asaquzzaman",
          "product": "WP Human Resource Management",
          "versions": [
            {
              "version": "2.0.0",
              "status": "affected",
              "lessThanOrEqual": "2.2.17",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-862 Missing Authorization"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-6739",
      "publishedDate": "2025-07-04T01:44:00.965Z",
      "lastModifiedDate": "2025-07-04T01:44:00.965Z",
      "description": "The WPQuiz plugin for WordPress is vulnerable to SQL Injection via the 'id' attribute of the 'wpquiz' shortcode in all versions up to, and including, 0.4.2 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with Contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.",
      "severity": 6.5,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/16444905-b111-4b4f-a9f0-d8728da2ebfb?source=cve",
          "type": "reference"
        },
        {
          "url": "https://wordpress.org/plugins/wpquiz/",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "bauc",
          "product": "WPQuiz",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "0.4.2",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-5567",
      "publishedDate": "2025-07-04T02:22:33.158Z",
      "lastModifiedDate": "2025-07-04T02:22:33.158Z",
      "description": "The WP Shortcodes Plugin — Shortcodes Ultimate plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'data-url' DOM element attribute in all versions up to, and including, 7.4.0 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
      "severity": 6.4,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/fbd67145-5b95-4890-a265-1dd7a029aec6?source=cve",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/browser/shortcodes-ultimate/tags/7.4.0/includes/js/shortcodes/index.js",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "gn_themes",
          "product": "WP Shortcodes Plugin — Shortcodes Ultimate",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "7.4.0",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-6039",
      "publishedDate": "2025-07-04T01:44:06.031Z",
      "lastModifiedDate": "2025-07-04T01:44:06.031Z",
      "description": "The ProcessingJS for WordPress plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'pjs4wp' shortcode in all versions up to, and including, 1.2.2 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
      "severity": 6.4,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/fcda8a7a-40e3-416e-940a-ba0245dcaa7d?source=cve",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/browser/processingjs-for-wp/trunk/processingjs-for-wp.php",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "cageehv",
          "product": "ProcessingJS for WordPress",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "1.2.2",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-6787",
      "publishedDate": "2025-07-04T01:44:04.575Z",
      "lastModifiedDate": "2025-07-04T01:44:04.575Z",
      "description": "The Smart Docs plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'smartdocs_search' shortcode in all versions up to, and including, 1.1.0 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.",
      "severity": 6.4,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/70c41a28-982f-43e6-9415-3a2d996959f3?source=cve",
          "type": "reference"
        },
        {
          "url": "https://wordpress.org/plugins/smart-docs/",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "ibachal",
          "product": "Smart Docs",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "1.1.0",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-6729",
      "publishedDate": "2025-07-04T01:44:03.082Z",
      "lastModifiedDate": "2025-07-04T01:44:03.082Z",
      "description": "The PayMaster for WooCommerce plugin for WordPress is vulnerable to Server-Side Request Forgery in all versions up to, and including, 0.4.31 via the 'wp_ajax_paym_status' AJAX action This makes it possible for authenticated attackers, with Subscriber-level access and above, to make web requests to arbitrary locations originating from the web application and can be used to query and modify information from internal services.",
      "severity": 6.4,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/2b9b501e-2ce7-43d8-bad2-6c3176eed8e2?source=cve",
          "type": "reference"
        },
        {
          "url": "https://wordpress.org/plugins/woocommerce-paymaster-gateway-019/",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "qazomardok",
          "product": "PayMaster for WooCommerce",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "0.4.31",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-918 Server-Side Request Forgery (SSRF)"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-7046",
      "publishedDate": "2025-07-04T01:44:00.580Z",
      "lastModifiedDate": "2025-07-04T01:44:00.580Z",
      "description": "The Portfolio for Elementor & Image Gallery | PowerFolio plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the Custom JS Attributes of Plugin's widgets in all versions up to, and including, 3.2.0 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with Contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.\r\nThe issue was partially fixed in version 3.2.0 and fully fixed in version 3.2.1",
      "severity": 6.4,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/11f01584-e389-4551-b151-f3f0686d1d5d?source=cve",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/browser/portfolio-elementor/trunk/elementor/elementor-widgets/portfolio_widget.php#L541",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/browser/portfolio-elementor/trunk/elementor/elementor-widgets/image_gallery_widget.php#L492",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/changeset/3318503/",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "dotrex",
          "product": "Portfolio for Elementor & Image Gallery | PowerFolio",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "3.2.0",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-6041",
      "publishedDate": "2025-07-04T01:44:01.931Z",
      "lastModifiedDate": "2025-07-04T01:44:01.931Z",
      "description": "The yContributors plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 0.5. This is due to missing or incorrect nonce validation on the 'yContributors' page. This makes it possible for unauthenticated attackers to update settings and inject malicious web scripts via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.",
      "severity": 6.1,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/1bd61124-d4af-4c88-be96-579c735b7b49?source=cve",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/browser/ycontributors/trunk/ycontributors_admin.php#L19",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "yonisink",
          "product": "yContributors",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "0.5",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-352 Cross-Site Request Forgery (CSRF)"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-6786",
      "publishedDate": "2025-07-04T01:43:59.455Z",
      "lastModifiedDate": "2025-07-04T01:43:59.455Z",
      "description": "The DocCheck Login plugin for WordPress is vulnerable to unauthorized post access in all versions up to, and including, 1.1.5. This is due to plugin redirecting a user to login on a password protected post after the page has loaded. This makes it possible for unauthenticated attackers to read posts they should not have access to.",
      "severity": 5.3,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/0739b5ec-b1c4-4451-97c1-f8d5ed26a2d5?source=cve",
          "type": "reference"
        },
        {
          "url": "https://wordpress.org/plugins/doccheck-login/",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "antwerpes",
          "product": "DocCheck Login",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "1.1.5",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-284 Improper Access Control"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-5924",
      "publishedDate": "2025-07-04T01:44:05.301Z",
      "lastModifiedDate": "2025-07-04T01:44:05.301Z",
      "description": "The WP Firebase Push Notification plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.2.0. This is due to missing or incorrect nonce validation on the wfpn_brodcast_notification_message() function. This makes it possible for unauthenticated attackers to send broadcast notifications via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.",
      "severity": 4.3,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/996e0432-e795-4c01-8182-603a47f4f341?source=cve",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/browser/wp-push-notification-firebase/trunk/wp_push_notification_firebase.php#L67",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "skywaveinfo",
          "product": "WP Firebase Push Notification",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "1.2.0",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-352 Cross-Site Request Forgery (CSRF)"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-5933",
      "publishedDate": "2025-07-04T01:44:00.174Z",
      "lastModifiedDate": "2025-07-04T01:44:00.174Z",
      "description": "The RD Contacto plugin for WordPress is vulnerable to Cross-Site Request Forgery in all versions up to, and including, 1.4. This is due to missing or incorrect nonce validation on the rdWappUpdateData() function. This makes it possible for unauthenticated attackers to update plugin settings via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.",
      "severity": 4.3,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/113b3093-18fe-40ae-85af-aae1945201db?source=cve",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/browser/rd-wapp/trunk/includes/rdwapp-class.php#L35",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "richarddev7",
          "product": "RD Contacto",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "1.4",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-352 Cross-Site Request Forgery (CSRF)"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-7053",
      "publishedDate": "2025-07-04T02:02:05.755Z",
      "lastModifiedDate": "2025-07-04T02:02:05.755Z",
      "description": "A vulnerability was found in Cockpit up to 2.11.3. It has been rated as problematic. This issue affects some unknown processing of the file /system/users/save. The manipulation of the argument name/email leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 2.11.4 is able to address this issue. The patch is named bdcd5e3bc651c0839c7eea807f3eb6af856dbc76. It is recommended to upgrade the affected component. The vendor was contacted early about this disclosure and acted very professional. A patch and new release was made available very quickly.",
      "severity": 3.5,
      "references": [
        {
          "url": "https://vuldb.com/?id.314819",
          "type": "reference"
        },
        {
          "url": "https://vuldb.com/?ctiid.314819",
          "type": "reference"
        },
        {
          "url": "https://vuldb.com/?submit.605594",
          "type": "reference"
        },
        {
          "url": "https://github.com/Cockpit-HQ/Cockpit/commit/bdcd5e3bc651c0839c7eea807f3eb6af856dbc76",
          "type": "reference"
        },
        {
          "url": "https://github.com/Cockpit-HQ/Cockpit/releases/tag/2.11.4",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "n/a",
          "product": "Cockpit",
          "versions": [
            {
              "version": "2.11.0",
              "status": "affected"
            },
            {
              "version": "2.11.1",
              "status": "affected"
            },
            {
              "version": "2.11.2",
              "status": "affected"
            },
            {
              "version": "2.11.3",
              "status": "affected"
            },
            {
              "version": "2.11.4",
              "status": "unaffected"
            }
          ]
        }
      ],
      "problemType": [
        "Cross Site Scripting",
        "Code Injection"
      ],
      "fix_suggestion": "无法生成修复建议"
    }
  ]
}