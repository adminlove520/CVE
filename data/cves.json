{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "total_count": 27,
    "last_updated": "2025-07-09T11:19:54.272600",
    "severity_distribution": {
      "critical": 0,
      "high": 0,
      "medium": 0,
      "low": 0,
      "none": 27
    }
  },
  "cves": [
    {
      "id": "CVE-2025-38264",
      "publishedDate": "2025-07-09T10:42:38.602Z",
      "lastModifiedDate": "2025-07-09T10:42:38.602Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-tcp: sanitize request list handling\n\nValidate the request in nvme_tcp_handle_r2t() to ensure it's not part of\nany list, otherwise a malicious R2T PDU might inject a loop in request\nlist processing.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/78a4adcd3fedb0728436e8094848ebf4c6bae006",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/f054ea62598197714a6ca7b3b387a027308f8b13",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/0bf04c874fcb1ae46a863034296e4b33d8fbd66c",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/nvme/host/tcp.c"
          ],
          "versions": [
            {
              "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
              "lessThan": "78a4adcd3fedb0728436e8094848ebf4c6bae006",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
              "lessThan": "f054ea62598197714a6ca7b3b387a027308f8b13",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
              "lessThan": "0bf04c874fcb1ae46a863034296e4b33d8fbd66c",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/nvme/host/tcp.c"
          ],
          "versions": [
            {
              "version": "6.12.36",
              "lessThanOrEqual": "6.12.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc1",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38263",
      "publishedDate": "2025-07-09T10:42:37.990Z",
      "lastModifiedDate": "2025-07-09T10:42:37.990Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbcache: fix NULL pointer in cache_set_flush()\n\n1. LINE#1794 - LINE#1887 is some codes about function of\n   bch_cache_set_alloc().\n2. LINE#2078 - LINE#2142 is some codes about function of\n   register_cache_set().\n3. register_cache_set() will call bch_cache_set_alloc() in LINE#2098.\n\n 1794 struct cache_set *bch_cache_set_alloc(struct cache_sb *sb)\n 1795 {\n ...\n 1860         if (!(c->devices = kcalloc(c->nr_uuids, sizeof(void *), GFP_KERNEL)) ||\n 1861             mempool_init_slab_pool(&c->search, 32, bch_search_cache) ||\n 1862             mempool_init_kmalloc_pool(&c->bio_meta, 2,\n 1863                                 sizeof(struct bbio) + sizeof(struct bio_vec) *\n 1864                                 bucket_pages(c)) ||\n 1865             mempool_init_kmalloc_pool(&c->fill_iter, 1, iter_size) ||\n 1866             bioset_init(&c->bio_split, 4, offsetof(struct bbio, bio),\n 1867                         BIOSET_NEED_BVECS|BIOSET_NEED_RESCUER) ||\n 1868             !(c->uuids = alloc_bucket_pages(GFP_KERNEL, c)) ||\n 1869             !(c->moving_gc_wq = alloc_workqueue(\"bcache_gc\",\n 1870                                                 WQ_MEM_RECLAIM, 0)) ||\n 1871             bch_journal_alloc(c) ||\n 1872             bch_btree_cache_alloc(c) ||\n 1873             bch_open_buckets_alloc(c) ||\n 1874             bch_bset_sort_state_init(&c->sort, ilog2(c->btree_pages)))\n 1875                 goto err;\n                      ^^^^^^^^\n 1876\n ...\n 1883         return c;\n 1884 err:\n 1885         bch_cache_set_unregister(c);\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n 1886         return NULL;\n 1887 }\n ...\n 2078 static const char *register_cache_set(struct cache *ca)\n 2079 {\n ...\n 2098         c = bch_cache_set_alloc(&ca->sb);\n 2099         if (!c)\n 2100                 return err;\n                      ^^^^^^^^^^\n ...\n 2128         ca->set = c;\n 2129         ca->set->cache[ca->sb.nr_this_dev] = ca;\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n 2138         return NULL;\n 2139 err:\n 2140         bch_cache_set_unregister(c);\n 2141         return err;\n 2142 }\n\n(1) If LINE#1860 - LINE#1874 is true, then do 'goto err'(LINE#1875) and\n    call bch_cache_set_unregister()(LINE#1885).\n(2) As (1) return NULL(LINE#1886), LINE#2098 - LINE#2100 would return.\n(3) As (2) has returned, LINE#2128 - LINE#2129 would do *not* give the\n    value to c->cache[], it means that c->cache[] is NULL.\n\nLINE#1624 - LINE#1665 is some codes about function of cache_set_flush().\nAs (1), in LINE#1885 call\nbch_cache_set_unregister()\n---> bch_cache_set_stop()\n     ---> closure_queue()\n          -.-> cache_set_flush() (as below LINE#1624)\n\n 1624 static void cache_set_flush(struct closure *cl)\n 1625 {\n ...\n 1654         for_each_cache(ca, c, i)\n 1655                 if (ca->alloc_thread)\n                          ^^\n 1656                         kthread_stop(ca->alloc_thread);\n ...\n 1665 }\n\n(4) In LINE#1655 ca is NULL(see (3)) in cache_set_flush() then the\n    kernel crash occurred as below:\n[  846.712887] bcache: register_cache() error drbd6: cannot allocate memory\n[  846.713242] bcache: register_bcache() error : failed to register device\n[  846.713336] bcache: cache_set_free() Cache set 2f84bdc1-498a-4f2f-98a7-01946bf54287 unregistered\n[  846.713768] BUG: unable to handle kernel NULL pointer dereference at 00000000000009f8\n[  846.714790] PGD 0 P4D 0\n[  846.715129] Oops: 0000 [#1] SMP PTI\n[  846.715472] CPU: 19 PID: 5057 Comm: kworker/19:16 Kdump: loaded Tainted: G           OE    --------- -  - 4.18.0-147.5.1.el8_1.5es.3.x86_64 #1\n[  846.716082] Hardware name: ESPAN GI-25212/X11DPL-i, BIOS 2.1 06/15/2018\n[  846.716451] Workqueue: events cache_set_flush [bcache]\n[  846.716808] RIP: 0010:cache_set_flush+0xc9/0x1b0 [bcache]\n[  846.717155] Code: 00 4c 89 a5 b0 03 00 00 48 8b 85 68 f6 ff ff a8 08 0f 84 88 00 00 00 31 db 66 83 bd 3c f7 ff ff 00 48 8b 85 48 ff ff ff 74 28 <48> 8b b8 f8 09 00 0\n---truncated---",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/c4f5e7e417034b05f5d2f5fa9a872db897da69bd",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/553f560e0a74a7008ad9dba05c3fd05da296befb",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/667c3f52373ff5354cb3543e27237eb7df7b2333",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/3f9e128186c99a117e304f1dce6d0b9e50c63cd8",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/1e46ed947ec658f89f1a910d880cd05e42d3763e",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/md/bcache/super.c"
          ],
          "versions": [
            {
              "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
              "lessThan": "c4f5e7e417034b05f5d2f5fa9a872db897da69bd",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
              "lessThan": "553f560e0a74a7008ad9dba05c3fd05da296befb",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
              "lessThan": "667c3f52373ff5354cb3543e27237eb7df7b2333",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
              "lessThan": "3f9e128186c99a117e304f1dce6d0b9e50c63cd8",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
              "lessThan": "1e46ed947ec658f89f1a910d880cd05e42d3763e",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/md/bcache/super.c"
          ],
          "versions": [
            {
              "version": "6.1.143",
              "lessThanOrEqual": "6.1.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.6.96",
              "lessThanOrEqual": "6.6.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.12.36",
              "lessThanOrEqual": "6.12.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc1",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38262",
      "publishedDate": "2025-07-09T10:42:37.410Z",
      "lastModifiedDate": "2025-07-09T10:42:37.410Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntty: serial: uartlite: register uart driver in init\n\nWhen two instances of uart devices are probing, a concurrency race can\noccur. If one thread calls uart_register_driver function, which first\nallocates and assigns memory to 'uart_state' member of uart_driver\nstructure, the other instance can bypass uart driver registration and\ncall ulite_assign. This calls uart_add_one_port, which expects the uart\ndriver to be fully initialized. This leads to a kernel panic due to a\nnull pointer dereference:\n\n[    8.143581] BUG: kernel NULL pointer dereference, address: 00000000000002b8\n[    8.156982] #PF: supervisor write access in kernel mode\n[    8.156984] #PF: error_code(0x0002) - not-present page\n[    8.156986] PGD 0 P4D 0\n...\n[    8.180668] RIP: 0010:mutex_lock+0x19/0x30\n[    8.188624] Call Trace:\n[    8.188629]  ? __die_body.cold+0x1a/0x1f\n[    8.195260]  ? page_fault_oops+0x15c/0x290\n[    8.209183]  ? __irq_resolve_mapping+0x47/0x80\n[    8.209187]  ? exc_page_fault+0x64/0x140\n[    8.209190]  ? asm_exc_page_fault+0x22/0x30\n[    8.209196]  ? mutex_lock+0x19/0x30\n[    8.223116]  uart_add_one_port+0x60/0x440\n[    8.223122]  ? proc_tty_register_driver+0x43/0x50\n[    8.223126]  ? tty_register_driver+0x1ca/0x1e0\n[    8.246250]  ulite_probe+0x357/0x4b0 [uartlite]\n\nTo prevent it, move uart driver registration in to init function. This\nwill ensure that uart_driver is always registered when probe function\nis called.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/6db06aaea07bb7c8e33a425cf7b98bf29ee6056e",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/8e958d10dd0ce5ae674cce460db5c9ca3f25243b",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/685d29f2c5057b32c7b1b46f2a7d303b926c8f72",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/f5e4229d94792b40e750f30c92bcf7a3107c72ef",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/6bd697b5fc39fd24e2aa418c7b7d14469f550a93",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/tty/serial/uartlite.c"
          ],
          "versions": [
            {
              "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
              "lessThan": "6db06aaea07bb7c8e33a425cf7b98bf29ee6056e",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
              "lessThan": "8e958d10dd0ce5ae674cce460db5c9ca3f25243b",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
              "lessThan": "685d29f2c5057b32c7b1b46f2a7d303b926c8f72",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
              "lessThan": "f5e4229d94792b40e750f30c92bcf7a3107c72ef",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
              "lessThan": "6bd697b5fc39fd24e2aa418c7b7d14469f550a93",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/tty/serial/uartlite.c"
          ],
          "versions": [
            {
              "version": "6.1.143",
              "lessThanOrEqual": "6.1.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.6.96",
              "lessThanOrEqual": "6.6.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.12.36",
              "lessThanOrEqual": "6.12.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc1",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38261",
      "publishedDate": "2025-07-09T10:42:36.810Z",
      "lastModifiedDate": "2025-07-09T10:42:36.810Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: save the SR_SUM status over switches\n\nWhen threads/tasks are switched we need to ensure the old execution's\nSR_SUM state is saved and the new thread has the old SR_SUM state\nrestored.\n\nThe issue was seen under heavy load especially with the syz-stress tool\nrunning, with crashes as follows in schedule_tail:\n\nUnable to handle kernel access to user memory without uaccess routines\nat virtual address 000000002749f0d0\nOops [#1]\nModules linked in:\nCPU: 1 PID: 4875 Comm: syz-executor.0 Not tainted\n5.12.0-rc2-syzkaller-00467-g0d7588ab9ef9 #0\nHardware name: riscv-virtio,qemu (DT)\nepc : schedule_tail+0x72/0xb2 kernel/sched/core.c:4264\n ra : task_pid_vnr include/linux/sched.h:1421 [inline]\n ra : schedule_tail+0x70/0xb2 kernel/sched/core.c:4264\nepc : ffffffe00008c8b0 ra : ffffffe00008c8ae sp : ffffffe025d17ec0\n gp : ffffffe005d25378 tp : ffffffe00f0d0000 t0 : 0000000000000000\n t1 : 0000000000000001 t2 : 00000000000f4240 s0 : ffffffe025d17ee0\n s1 : 000000002749f0d0 a0 : 000000000000002a a1 : 0000000000000003\n a2 : 1ffffffc0cfac500 a3 : ffffffe0000c80cc a4 : 5ae9db91c19bbe00\n a5 : 0000000000000000 a6 : 0000000000f00000 a7 : ffffffe000082eba\n s2 : 0000000000040000 s3 : ffffffe00eef96c0 s4 : ffffffe022c77fe0\n s5 : 0000000000004000 s6 : ffffffe067d74e00 s7 : ffffffe067d74850\n s8 : ffffffe067d73e18 s9 : ffffffe067d74e00 s10: ffffffe00eef96e8\n s11: 000000ae6cdf8368 t3 : 5ae9db91c19bbe00 t4 : ffffffc4043cafb2\n t5 : ffffffc4043cafba t6 : 0000000000040000\nstatus: 0000000000000120 badaddr: 000000002749f0d0 cause:\n000000000000000f\nCall Trace:\n[<ffffffe00008c8b0>] schedule_tail+0x72/0xb2 kernel/sched/core.c:4264\n[<ffffffe000005570>] ret_from_exception+0x0/0x14\nDumping ftrace buffer:\n   (ftrace buffer empty)\n---[ end trace b5f8f9231dc87dda ]---\n\nThe issue comes from the put_user() in schedule_tail\n(kernel/sched/core.c) doing the following:\n\nasmlinkage __visible void schedule_tail(struct task_struct *prev)\n{\n...\n        if (current->set_child_tid)\n                put_user(task_pid_vnr(current), current->set_child_tid);\n...\n}\n\nthe put_user() macro causes the code sequence to come out as follows:\n\n1:\t__enable_user_access()\n2:\treg = task_pid_vnr(current);\n3:\t*current->set_child_tid = reg;\n4:\t__disable_user_access()\n\nThe problem is that we may have a sleeping function as argument which\ncould clear SR_SUM causing the panic above. This was fixed by\nevaluating the argument of the put_user() macro outside the user-enabled\nsection in commit 285a76bb2cf5 (\"riscv: evaluate put_user() arg before\nenabling user access\")\"\n\nIn order for riscv to take advantage of unsafe_get/put_XXX() macros and\nto avoid the same issue we had with put_user() and sleeping functions we\nmust ensure code flow can go through switch_to() from within a region of\ncode with SR_SUM enabled and come back with SR_SUM still enabled. This\npatch addresses the problem allowing future work to enable full use of\nunsafe_get/put_XXX() macros without needing to take a CSR bit flip cost\non every access. Make switch_to() save and restore SR_SUM.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/69ea599a8dab93a620c92c255be4239a06290a77",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/788aa64c01f1262310b4c1fb827a36df170d86ea",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "arch/riscv/include/asm/processor.h",
            "arch/riscv/kernel/asm-offsets.c",
            "arch/riscv/kernel/entry.S"
          ],
          "versions": [
            {
              "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
              "lessThan": "69ea599a8dab93a620c92c255be4239a06290a77",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "1da177e4c3f41524e886b7f1b8a0c1fc7321cac2",
              "lessThan": "788aa64c01f1262310b4c1fb827a36df170d86ea",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "arch/riscv/include/asm/processor.h",
            "arch/riscv/kernel/asm-offsets.c",
            "arch/riscv/kernel/entry.S"
          ],
          "versions": [
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc1",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38260",
      "publishedDate": "2025-07-09T10:42:36.204Z",
      "lastModifiedDate": "2025-07-09T10:42:36.204Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: handle csum tree error with rescue=ibadroots correctly\n\n[BUG]\nThere is syzbot based reproducer that can crash the kernel, with the\nfollowing call trace: (With some debug output added)\n\n DEBUG: rescue=ibadroots parsed\n BTRFS: device fsid 14d642db-7b15-43e4-81e6-4b8fac6a25f8 devid 1 transid 8 /dev/loop0 (7:0) scanned by repro (1010)\n BTRFS info (device loop0): first mount of filesystem 14d642db-7b15-43e4-81e6-4b8fac6a25f8\n BTRFS info (device loop0): using blake2b (blake2b-256-generic) checksum algorithm\n BTRFS info (device loop0): using free-space-tree\n BTRFS warning (device loop0): checksum verify failed on logical 5312512 mirror 1 wanted 0xb043382657aede36608fd3386d6b001692ff406164733d94e2d9a180412c6003 found 0x810ceb2bacb7f0f9eb2bf3b2b15c02af867cb35ad450898169f3b1f0bd818651 level 0\n DEBUG: read tree root path failed for tree csum, ret=-5\n BTRFS warning (device loop0): checksum verify failed on logical 5328896 mirror 1 wanted 0x51be4e8b303da58e6340226815b70e3a93592dac3f30dd510c7517454de8567a found 0x51be4e8b303da58e634022a315b70e3a93592dac3f30dd510c7517454de8567a level 0\n BTRFS warning (device loop0): checksum verify failed on logical 5292032 mirror 1 wanted 0x1924ccd683be9efc2fa98582ef58760e3848e9043db8649ee382681e220cdee4 found 0x0cb6184f6e8799d9f8cb335dccd1d1832da1071d12290dab3b85b587ecacca6e level 0\n process 'repro' launched './file2' with NULL argv: empty string added\n DEBUG: no csum root, idatacsums=0 ibadroots=134217728\n Oops: general protection fault, probably for non-canonical address 0xdffffc0000000041: 0000 [#1] SMP KASAN NOPTI\n KASAN: null-ptr-deref in range [0x0000000000000208-0x000000000000020f]\n CPU: 5 UID: 0 PID: 1010 Comm: repro Tainted: G           OE       6.15.0-custom+ #249 PREEMPT(full)\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS unknown 02/02/2022\n RIP: 0010:btrfs_lookup_csum+0x93/0x3d0 [btrfs]\n Call Trace:\n  <TASK>\n  btrfs_lookup_bio_sums+0x47a/0xdf0 [btrfs]\n  btrfs_submit_bbio+0x43e/0x1a80 [btrfs]\n  submit_one_bio+0xde/0x160 [btrfs]\n  btrfs_readahead+0x498/0x6a0 [btrfs]\n  read_pages+0x1c3/0xb20\n  page_cache_ra_order+0x4b5/0xc20\n  filemap_get_pages+0x2d3/0x19e0\n  filemap_read+0x314/0xde0\n  __kernel_read+0x35b/0x900\n  bprm_execve+0x62e/0x1140\n  do_execveat_common.isra.0+0x3fc/0x520\n  __x64_sys_execveat+0xdc/0x130\n  do_syscall_64+0x54/0x1d0\n  entry_SYSCALL_64_after_hwframe+0x76/0x7e\n ---[ end trace 0000000000000000 ]---\n\n[CAUSE]\nFirstly the fs has a corrupted csum tree root, thus to mount the fs we\nhave to go \"ro,rescue=ibadroots\" mount option.\n\nNormally with that mount option, a bad csum tree root should set\nBTRFS_FS_STATE_NO_DATA_CSUMS flag, so that any future data read will\nignore csum search.\n\nBut in this particular case, we have the following call trace that\ncaused NULL csum root, but not setting BTRFS_FS_STATE_NO_DATA_CSUMS:\n\nload_global_roots_objectid():\n\n\t\tret = btrfs_search_slot();\n\t\t/* Succeeded */\n\t\tbtrfs_item_key_to_cpu()\n\t\tfound = true;\n\t\t/* We found the root item for csum tree. */\n\t\troot = read_tree_root_path();\n\t\tif (IS_ERR(root)) {\n\t\t\tif (!btrfs_test_opt(fs_info, IGNOREBADROOTS))\n\t\t\t/*\n\t\t\t * Since we have rescue=ibadroots mount option,\n\t\t\t * @ret is still 0.\n\t\t\t */\n\t\t\tbreak;\n\tif (!found || ret) {\n\t\t/* @found is true, @ret is 0, error handling for csum\n\t\t * tree is skipped.\n\t\t */\n\t}\n\nThis means we completely skipped to set BTRFS_FS_STATE_NO_DATA_CSUMS if\nthe csum tree is corrupted, which results unexpected later csum lookup.\n\n[FIX]\nIf read_tree_root_path() failed, always populate @ret to the error\nnumber.\n\nAs at the end of the function, we need @ret to determine if we need to\ndo the extra error handling for csum tree.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/f8ce11903211542a61f05c02caedd2edfb4256b8",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/fc97a116dc4929905538bc0bd3af7faa51192957",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/bbe9231fe611a54a447962494472f604419bad59",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/3f5c4a996f8f4fecd24a3eb344a307c50af895c2",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/547e836661554dcfa15c212a3821664e85b4191a",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "fs/btrfs/disk-io.c"
          ],
          "versions": [
            {
              "version": "abed4aaae4f71a7bcdbe90a65319b6e772a2689d",
              "lessThan": "f8ce11903211542a61f05c02caedd2edfb4256b8",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "abed4aaae4f71a7bcdbe90a65319b6e772a2689d",
              "lessThan": "fc97a116dc4929905538bc0bd3af7faa51192957",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "abed4aaae4f71a7bcdbe90a65319b6e772a2689d",
              "lessThan": "bbe9231fe611a54a447962494472f604419bad59",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "abed4aaae4f71a7bcdbe90a65319b6e772a2689d",
              "lessThan": "3f5c4a996f8f4fecd24a3eb344a307c50af895c2",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "abed4aaae4f71a7bcdbe90a65319b6e772a2689d",
              "lessThan": "547e836661554dcfa15c212a3821664e85b4191a",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "fs/btrfs/disk-io.c"
          ],
          "versions": [
            {
              "version": "5.17",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "5.17",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.1.143",
              "lessThanOrEqual": "6.1.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.6.96",
              "lessThanOrEqual": "6.6.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.12.36",
              "lessThanOrEqual": "6.12.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38259",
      "publishedDate": "2025-07-09T10:42:35.602Z",
      "lastModifiedDate": "2025-07-09T10:42:35.602Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nASoC: codecs: wcd9335: Fix missing free of regulator supplies\n\nDriver gets and enables all regulator supplies in probe path\n(wcd9335_parse_dt() and wcd9335_power_on_reset()), but does not cleanup\nin final error paths and in unbind (missing remove() callback).  This\nleads to leaked memory and unbalanced regulator enable count during\nprobe errors or unbind.\n\nFix this by converting entire code into devm_regulator_bulk_get_enable()\nwhich also greatly simplifies the code.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/edadaf4239c14dc8a19ea7f60b97d5524d93c29b",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/9830ef1803a5bc50b4a984a06cf23142cd46229d",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/a8795f3cd289cd958f6396a1b43ba46fa8e22a2e",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/b86280aaa23c1c0f31bcaa600d35ddc45bc38b7a",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/9079db287fc3e38e040b0edeb0a25770bb679c8e",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "sound/soc/codecs/wcd9335.c"
          ],
          "versions": [
            {
              "version": "20aedafdf4926e7a957f8b302a18c8fb75c7e332",
              "lessThan": "edadaf4239c14dc8a19ea7f60b97d5524d93c29b",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "20aedafdf4926e7a957f8b302a18c8fb75c7e332",
              "lessThan": "9830ef1803a5bc50b4a984a06cf23142cd46229d",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "20aedafdf4926e7a957f8b302a18c8fb75c7e332",
              "lessThan": "a8795f3cd289cd958f6396a1b43ba46fa8e22a2e",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "20aedafdf4926e7a957f8b302a18c8fb75c7e332",
              "lessThan": "b86280aaa23c1c0f31bcaa600d35ddc45bc38b7a",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "20aedafdf4926e7a957f8b302a18c8fb75c7e332",
              "lessThan": "9079db287fc3e38e040b0edeb0a25770bb679c8e",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "sound/soc/codecs/wcd9335.c"
          ],
          "versions": [
            {
              "version": "5.1",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "5.1",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.1.143",
              "lessThanOrEqual": "6.1.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.6.96",
              "lessThanOrEqual": "6.6.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.12.36",
              "lessThanOrEqual": "6.12.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc1",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38258",
      "publishedDate": "2025-07-09T10:42:35.000Z",
      "lastModifiedDate": "2025-07-09T10:42:35.000Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/damon/sysfs-schemes: free old damon_sysfs_scheme_filter->memcg_path on write\n\nmemcg_path_store() assigns a newly allocated memory buffer to\nfilter->memcg_path, without deallocating the previously allocated and\nassigned memory buffer.  As a result, users can leak kernel memory by\ncontinuously writing a data to memcg_path DAMOS sysfs file.  Fix the leak\nby deallocating the previously set memory buffer.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/490a43d07f1663d827e802720d30cbc0494e4f81",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/c5d5b0047b0c0f304608f3824139f7bd34c48413",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/4a158ac0538dd5695eeaa00aa0720d711f3e4ef1",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/4f489fe6afb395dbc79840efa3c05440b760d883",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "mm/damon/sysfs-schemes.c"
          ],
          "versions": [
            {
              "version": "7ee161f18b5da5170b5d6a51aace49d312099128",
              "lessThan": "490a43d07f1663d827e802720d30cbc0494e4f81",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "7ee161f18b5da5170b5d6a51aace49d312099128",
              "lessThan": "c5d5b0047b0c0f304608f3824139f7bd34c48413",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "7ee161f18b5da5170b5d6a51aace49d312099128",
              "lessThan": "4a158ac0538dd5695eeaa00aa0720d711f3e4ef1",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "7ee161f18b5da5170b5d6a51aace49d312099128",
              "lessThan": "4f489fe6afb395dbc79840efa3c05440b760d883",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "mm/damon/sysfs-schemes.c"
          ],
          "versions": [
            {
              "version": "6.3",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "6.3",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.6.96",
              "lessThanOrEqual": "6.6.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.12.36",
              "lessThanOrEqual": "6.12.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38257",
      "publishedDate": "2025-07-09T10:42:34.395Z",
      "lastModifiedDate": "2025-07-09T10:42:34.395Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/pkey: Prevent overflow in size calculation for memdup_user()\n\nNumber of apqn target list entries contained in 'nr_apqns' variable is\ndetermined by userspace via an ioctl call so the result of the product in\ncalculation of size passed to memdup_user() may overflow.\n\nIn this case the actual size of the allocated area and the value\ndescribing it won't be in sync leading to various types of unpredictable\nbehaviour later.\n\nUse a proper memdup_array_user() helper which returns an error if an\noverflow is detected. Note that it is different from when nr_apqns is\ninitially zero - that case is considered valid and should be handled in\nsubsequent pkey_handler implementations.\n\nFound by Linux Verification Center (linuxtesting.org).",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/faa1ab4a23c42e34dc000ef4977b751d94d5148c",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/88f3869649edbc4a13f6c2877091f81cd5a50f05",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/f855b119e62b004a5044ed565f2a2b368c4d3f16",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/73483ca7e07a5e39bdf612eec9d3d293e8bef649",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/7360ee47599af91a1d5f4e74d635d9408a54e489",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/s390/crypto/pkey_api.c"
          ],
          "versions": [
            {
              "version": "f2bbc96e7cfad3891b7bf9bd3e566b9b7ab4553d",
              "lessThan": "faa1ab4a23c42e34dc000ef4977b751d94d5148c",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "f2bbc96e7cfad3891b7bf9bd3e566b9b7ab4553d",
              "lessThan": "88f3869649edbc4a13f6c2877091f81cd5a50f05",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "f2bbc96e7cfad3891b7bf9bd3e566b9b7ab4553d",
              "lessThan": "f855b119e62b004a5044ed565f2a2b368c4d3f16",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "f2bbc96e7cfad3891b7bf9bd3e566b9b7ab4553d",
              "lessThan": "73483ca7e07a5e39bdf612eec9d3d293e8bef649",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "f2bbc96e7cfad3891b7bf9bd3e566b9b7ab4553d",
              "lessThan": "7360ee47599af91a1d5f4e74d635d9408a54e489",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/s390/crypto/pkey_api.c"
          ],
          "versions": [
            {
              "version": "5.4",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "5.4",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.1.143",
              "lessThanOrEqual": "6.1.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.6.96",
              "lessThanOrEqual": "6.6.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.12.36",
              "lessThanOrEqual": "6.12.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38256",
      "publishedDate": "2025-07-09T10:42:33.819Z",
      "lastModifiedDate": "2025-07-09T10:42:33.819Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring/rsrc: fix folio unpinning\n\nsyzbot complains about an unmapping failure:\n\n[  108.070381][   T14] kernel BUG at mm/gup.c:71!\n[  108.070502][   T14] Internal error: Oops - BUG: 00000000f2000800 [#1]  SMP\n[  108.123672][   T14] Hardware name: QEMU KVM Virtual Machine, BIOS edk2-20250221-8.fc42 02/21/2025\n[  108.127458][   T14] Workqueue: iou_exit io_ring_exit_work\n[  108.174205][   T14] Call trace:\n[  108.175649][   T14]  sanity_check_pinned_pages+0x7cc/0x7d0 (P)\n[  108.178138][   T14]  unpin_user_page+0x80/0x10c\n[  108.180189][   T14]  io_release_ubuf+0x84/0xf8\n[  108.182196][   T14]  io_free_rsrc_node+0x250/0x57c\n[  108.184345][   T14]  io_rsrc_data_free+0x148/0x298\n[  108.186493][   T14]  io_sqe_buffers_unregister+0x84/0xa0\n[  108.188991][   T14]  io_ring_ctx_free+0x48/0x480\n[  108.191057][   T14]  io_ring_exit_work+0x764/0x7d8\n[  108.193207][   T14]  process_one_work+0x7e8/0x155c\n[  108.195431][   T14]  worker_thread+0x958/0xed8\n[  108.197561][   T14]  kthread+0x5fc/0x75c\n[  108.199362][   T14]  ret_from_fork+0x10/0x20\n\nWe can pin a tail page of a folio, but then io_uring will try to unpin\nthe head page of the folio. While it should be fine in terms of keeping\nthe page actually alive, mm folks say it's wrong and triggers a debug\nwarning. Use unpin_user_folio() instead of unpin_user_page*.\n\n[axboe: adapt to current tree, massage commit message]",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/53fd75f25b223878b5fff14932e3a22f42b54f77",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/11e7b7369e655e6131387b174218d7fa9557b3da",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/5afb4bf9fc62d828647647ec31745083637132e4",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "io_uring/rsrc.c"
          ],
          "versions": [
            {
              "version": "a8edbb424b1391b077407c75d8f5d2ede77aa70d",
              "lessThan": "53fd75f25b223878b5fff14932e3a22f42b54f77",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "a8edbb424b1391b077407c75d8f5d2ede77aa70d",
              "lessThan": "11e7b7369e655e6131387b174218d7fa9557b3da",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "a8edbb424b1391b077407c75d8f5d2ede77aa70d",
              "lessThan": "5afb4bf9fc62d828647647ec31745083637132e4",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "io_uring/rsrc.c"
          ],
          "versions": [
            {
              "version": "6.12",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "6.12",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.12.36",
              "lessThanOrEqual": "6.12.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38255",
      "publishedDate": "2025-07-09T10:42:33.225Z",
      "lastModifiedDate": "2025-07-09T10:42:33.225Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nlib/group_cpus: fix NULL pointer dereference from group_cpus_evenly()\n\nWhile testing null_blk with configfs, echo 0 > poll_queues will trigger\nfollowing panic:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000010\nOops: Oops: 0000 [#1] SMP NOPTI\nCPU: 27 UID: 0 PID: 920 Comm: bash Not tainted 6.15.0-02023-gadbdb95c8696-dirty #1238 PREEMPT(undef)\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.1-2.fc37 04/01/2014\nRIP: 0010:__bitmap_or+0x48/0x70\nCall Trace:\n <TASK>\n __group_cpus_evenly+0x822/0x8c0\n group_cpus_evenly+0x2d9/0x490\n blk_mq_map_queues+0x1e/0x110\n null_map_queues+0xc9/0x170 [null_blk]\n blk_mq_update_queue_map+0xdb/0x160\n blk_mq_update_nr_hw_queues+0x22b/0x560\n nullb_update_nr_hw_queues+0x71/0xf0 [null_blk]\n nullb_device_poll_queues_store+0xa4/0x130 [null_blk]\n configfs_write_iter+0x109/0x1d0\n vfs_write+0x26e/0x6f0\n ksys_write+0x79/0x180\n __x64_sys_write+0x1d/0x30\n x64_sys_call+0x45c4/0x45f0\n do_syscall_64+0xa5/0x240\n entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nRoot cause is that numgrps is set to 0, and ZERO_SIZE_PTR is returned from\nkcalloc(), and later ZERO_SIZE_PTR will be deferenced.\n\nFix the problem by checking numgrps first in group_cpus_evenly(), and\nreturn NULL directly if numgrps is zero.\n\n[yukuai3@huawei.com: also fix the non-SMP version]",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/64a99eff8dcf1f951a544e6058341b2b19a8fdbd",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/29d39e0d5f16c060e32542b2cf351c09fd22b250",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/911ef2e8a7de5b2bae8ff11fb0bd01f699e6db65",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/df831e97739405ecbaddb85516bc7d4d1c933d6b",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "lib/group_cpus.c"
          ],
          "versions": [
            {
              "version": "6a6dcae8f486c3f3298d0767d34505121c7b0b81",
              "lessThan": "64a99eff8dcf1f951a544e6058341b2b19a8fdbd",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "6a6dcae8f486c3f3298d0767d34505121c7b0b81",
              "lessThan": "29d39e0d5f16c060e32542b2cf351c09fd22b250",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "6a6dcae8f486c3f3298d0767d34505121c7b0b81",
              "lessThan": "911ef2e8a7de5b2bae8ff11fb0bd01f699e6db65",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "6a6dcae8f486c3f3298d0767d34505121c7b0b81",
              "lessThan": "df831e97739405ecbaddb85516bc7d4d1c933d6b",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "lib/group_cpus.c"
          ],
          "versions": [
            {
              "version": "6.3",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "6.3",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.6.96",
              "lessThanOrEqual": "6.6.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.12.36",
              "lessThanOrEqual": "6.12.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38254",
      "publishedDate": "2025-07-09T10:42:32.641Z",
      "lastModifiedDate": "2025-07-09T10:42:32.641Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amd/display: Add sanity checks for drm_edid_raw()\n\nWhen EDID is retrieved via drm_edid_raw(), it doesn't guarantee to\nreturn proper EDID bytes the caller wants: it may be either NULL (that\nleads to an Oops) or with too long bytes over the fixed size raw_edid\narray (that may lead to memory corruption).  The latter was reported\nactually when connected with a bad adapter.\n\nAdd sanity checks for drm_edid_raw() to address the above corner\ncases, and return EDID_BAD_INPUT accordingly.\n\n(cherry picked from commit 648d3f4d209725d51900d6a3ed46b7b600140cdf)",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/4b63507d7cd243574753c6b91f68516d9103f1de",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/6847b3b6e84ef37451c074e6a8db3fbd250c8dbf",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_helpers.c"
          ],
          "versions": [
            {
              "version": "48edb2a4256eedf6c92eecf2bc7744e6ecb44b5e",
              "lessThan": "4b63507d7cd243574753c6b91f68516d9103f1de",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "48edb2a4256eedf6c92eecf2bc7744e6ecb44b5e",
              "lessThan": "6847b3b6e84ef37451c074e6a8db3fbd250c8dbf",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_helpers.c"
          ],
          "versions": [
            {
              "version": "6.13",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "6.13",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38253",
      "publishedDate": "2025-07-09T10:42:32.059Z",
      "lastModifiedDate": "2025-07-09T10:42:32.059Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: wacom: fix crash in wacom_aes_battery_handler()\n\nCommit fd2a9b29dc9c (\"HID: wacom: Remove AES power_supply after extended\ninactivity\") introduced wacom_aes_battery_handler() which is scheduled\nas a delayed work (aes_battery_work).\n\nIn wacom_remove(), aes_battery_work is not canceled. Consequently, if\nthe device is removed while aes_battery_work is still pending, then hard\ncrashes or \"Oops: general protection fault...\" are experienced when\nwacom_aes_battery_handler() is finally called. E.g., this happens with\nbuilt-in USB devices after resume from hibernate when aes_battery_work\nwas still pending at the time of hibernation.\n\nSo, take care to cancel aes_battery_work in wacom_remove().",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/a4f182ffa30c52ad1c8e12edfb8049ee748c0f1b",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/57a3d82200dbeccd002244b96acad570eeeb731f",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/f3054152c12e2eed1e72704aff47b0ea58229584",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/hid/wacom_sys.c"
          ],
          "versions": [
            {
              "version": "fd2a9b29dc9c4c35def91d5d1c5b470843539de6",
              "lessThan": "a4f182ffa30c52ad1c8e12edfb8049ee748c0f1b",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "fd2a9b29dc9c4c35def91d5d1c5b470843539de6",
              "lessThan": "57a3d82200dbeccd002244b96acad570eeeb731f",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "fd2a9b29dc9c4c35def91d5d1c5b470843539de6",
              "lessThan": "f3054152c12e2eed1e72704aff47b0ea58229584",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/hid/wacom_sys.c"
          ],
          "versions": [
            {
              "version": "6.8",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "6.8",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.12.36",
              "lessThanOrEqual": "6.12.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38252",
      "publishedDate": "2025-07-09T10:42:31.477Z",
      "lastModifiedDate": "2025-07-09T10:42:31.477Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ncxl/ras: Fix CPER handler device confusion\n\nBy inspection, cxl_cper_handle_prot_err() is making a series of fragile\nassumptions that can lead to crashes:\n\n1/ It assumes that endpoints identified in the record are a CXL-type-3\n   device, nothing guarantees that.\n\n2/ It assumes that the device is bound to the cxl_pci driver, nothing\n   guarantees that.\n\n3/ Minor, it holds the device lock over the switch-port tracing for no\n   reason as the trace is 100% generated from data in the record.\n\nCorrect those by checking that the PCIe endpoint parents a cxl_memdev\nbefore assuming the format of the driver data, and move the lock to where\nit is required. Consequently this also makes the implementation ready for\nCXL accelerators that are not bound to cxl_pci.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/4bcb8dd36e9e3fad6c22862ac5b6993df838309b",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/3c70ec71abdaf4e4fa48cd8fdfbbd864d78235a8",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/cxl/core/ras.c"
          ],
          "versions": [
            {
              "version": "36f257e3b0ba904f5a4e7fa8dafaa60e88cdd28c",
              "lessThan": "4bcb8dd36e9e3fad6c22862ac5b6993df838309b",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "36f257e3b0ba904f5a4e7fa8dafaa60e88cdd28c",
              "lessThan": "3c70ec71abdaf4e4fa48cd8fdfbbd864d78235a8",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/cxl/core/ras.c"
          ],
          "versions": [
            {
              "version": "6.15",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "6.15",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38251",
      "publishedDate": "2025-07-09T10:42:30.877Z",
      "lastModifiedDate": "2025-07-09T10:42:30.877Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\natm: clip: prevent NULL deref in clip_push()\n\nBlamed commit missed that vcc_destroy_socket() calls\nclip_push() with a NULL skb.\n\nIf clip_devs is NULL, clip_push() then crashes when reading\nskb->truesize.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/88c88f91f4b3563956bb52e7a71a3640f7ece157",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/3c709dce16999bf6a1d2ce377deb5dd6fdd8cb08",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/a07005a77b18ae59b8471e7e4d991fa9f642b3c2",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/ede31ad949ae0d03cb4c5edd79991586ad7c8bb8",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/b993ea46b3b601915ceaaf3c802adf11e7d6bac6",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "net/atm/clip.c"
          ],
          "versions": [
            {
              "version": "93a2014afbace907178afc3c9c1e62c9a338595a",
              "lessThan": "88c88f91f4b3563956bb52e7a71a3640f7ece157",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "93a2014afbace907178afc3c9c1e62c9a338595a",
              "lessThan": "3c709dce16999bf6a1d2ce377deb5dd6fdd8cb08",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "93a2014afbace907178afc3c9c1e62c9a338595a",
              "lessThan": "a07005a77b18ae59b8471e7e4d991fa9f642b3c2",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "93a2014afbace907178afc3c9c1e62c9a338595a",
              "lessThan": "ede31ad949ae0d03cb4c5edd79991586ad7c8bb8",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "93a2014afbace907178afc3c9c1e62c9a338595a",
              "lessThan": "b993ea46b3b601915ceaaf3c802adf11e7d6bac6",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "net/atm/clip.c"
          ],
          "versions": [
            {
              "version": "5.7",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "5.7",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.1.143",
              "lessThanOrEqual": "6.1.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.6.96",
              "lessThanOrEqual": "6.6.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.12.36",
              "lessThanOrEqual": "6.12.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38250",
      "publishedDate": "2025-07-09T10:42:30.294Z",
      "lastModifiedDate": "2025-07-09T10:42:30.294Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nBluetooth: hci_core: Fix use-after-free in vhci_flush()\n\nsyzbot reported use-after-free in vhci_flush() without repro. [0]\n\nFrom the splat, a thread close()d a vhci file descriptor while\nits device was being used by iotcl() on another thread.\n\nOnce the last fd refcnt is released, vhci_release() calls\nhci_unregister_dev(), hci_free_dev(), and kfree() for struct\nvhci_data, which is set to hci_dev->dev->driver_data.\n\nThe problem is that there is no synchronisation after unlinking\nhdev from hci_dev_list in hci_unregister_dev().  There might be\nanother thread still accessing the hdev which was fetched before\nthe unlink operation.\n\nWe can use SRCU for such synchronisation.\n\nLet's run hci_dev_reset() under SRCU and wait for its completion\nin hci_unregister_dev().\n\nAnother option would be to restore hci_dev->destruct(), which was\nremoved in commit 587ae086f6e4 (\"Bluetooth: Remove unused\nhci-destruct cb\").  However, this would not be a good solution, as\nwe should not run hci_unregister_dev() while there are in-flight\nioctl() requests, which could lead to another data-race KCSAN splat.\n\nNote that other drivers seem to have the same problem, for exmaple,\nvirtbt_remove().\n\n[0]:\nBUG: KASAN: slab-use-after-free in skb_queue_empty_lockless include/linux/skbuff.h:1891 [inline]\nBUG: KASAN: slab-use-after-free in skb_queue_purge_reason+0x99/0x360 net/core/skbuff.c:3937\nRead of size 8 at addr ffff88807cb8d858 by task syz.1.219/6718\n\nCPU: 1 UID: 0 PID: 6718 Comm: syz.1.219 Not tainted 6.16.0-rc1-syzkaller-00196-g08207f42d3ff #0 PREEMPT(full)\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 05/07/2025\nCall Trace:\n <TASK>\n dump_stack_lvl+0x189/0x250 lib/dump_stack.c:120\n print_address_description mm/kasan/report.c:408 [inline]\n print_report+0xd2/0x2b0 mm/kasan/report.c:521\n kasan_report+0x118/0x150 mm/kasan/report.c:634\n skb_queue_empty_lockless include/linux/skbuff.h:1891 [inline]\n skb_queue_purge_reason+0x99/0x360 net/core/skbuff.c:3937\n skb_queue_purge include/linux/skbuff.h:3368 [inline]\n vhci_flush+0x44/0x50 drivers/bluetooth/hci_vhci.c:69\n hci_dev_do_reset net/bluetooth/hci_core.c:552 [inline]\n hci_dev_reset+0x420/0x5c0 net/bluetooth/hci_core.c:592\n sock_do_ioctl+0xd9/0x300 net/socket.c:1190\n sock_ioctl+0x576/0x790 net/socket.c:1311\n vfs_ioctl fs/ioctl.c:51 [inline]\n __do_sys_ioctl fs/ioctl.c:907 [inline]\n __se_sys_ioctl+0xf9/0x170 fs/ioctl.c:893\n do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]\n do_syscall_64+0xfa/0x3b0 arch/x86/entry/syscall_64.c:94\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\nRIP: 0033:0x7fcf5b98e929\nCode: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fcf5c7b9038 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\nRAX: ffffffffffffffda RBX: 00007fcf5bbb6160 RCX: 00007fcf5b98e929\nRDX: 0000000000000000 RSI: 00000000400448cb RDI: 0000000000000009\nRBP: 00007fcf5ba10b39 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\nR13: 0000000000000000 R14: 00007fcf5bbb6160 R15: 00007ffd6353d528\n </TASK>\n\nAllocated by task 6535:\n kasan_save_stack mm/kasan/common.c:47 [inline]\n kasan_save_track+0x3e/0x80 mm/kasan/common.c:68\n poison_kmalloc_redzone mm/kasan/common.c:377 [inline]\n __kasan_kmalloc+0x93/0xb0 mm/kasan/common.c:394\n kasan_kmalloc include/linux/kasan.h:260 [inline]\n __kmalloc_cache_noprof+0x230/0x3d0 mm/slub.c:4359\n kmalloc_noprof include/linux/slab.h:905 [inline]\n kzalloc_noprof include/linux/slab.h:1039 [inline]\n vhci_open+0x57/0x360 drivers/bluetooth/hci_vhci.c:635\n misc_open+0x2bc/0x330 drivers/char/misc.c:161\n chrdev_open+0x4c9/0x5e0 fs/char_dev.c:414\n do_dentry_open+0xdf0/0x1970 fs/open.c:964\n vfs_open+0x3b/0x340 fs/open.c:1094\n do_open fs/namei.c:3887 [inline]\n path_openat+0x2ee5/0x3830 fs/name\n---truncated---",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/ce23b73f0f27e2dbeb81734a79db710f05aa33c6",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/0e5c144c557df910ab64d9c25d06399a9a735e65",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/1d6123102e9fbedc8d25bf4731da6d513173e49e",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "include/net/bluetooth/hci_core.h",
            "net/bluetooth/hci_core.c"
          ],
          "versions": [
            {
              "version": "bf18c7118cf83ad4b9aa476354b4a06bcb9d0c4f",
              "lessThan": "ce23b73f0f27e2dbeb81734a79db710f05aa33c6",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "bf18c7118cf83ad4b9aa476354b4a06bcb9d0c4f",
              "lessThan": "0e5c144c557df910ab64d9c25d06399a9a735e65",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "bf18c7118cf83ad4b9aa476354b4a06bcb9d0c4f",
              "lessThan": "1d6123102e9fbedc8d25bf4731da6d513173e49e",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "include/net/bluetooth/hci_core.h",
            "net/bluetooth/hci_core.c"
          ],
          "versions": [
            {
              "version": "3.4",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "3.4",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.12.36",
              "lessThanOrEqual": "6.12.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38249",
      "publishedDate": "2025-07-09T10:42:29.704Z",
      "lastModifiedDate": "2025-07-09T10:42:29.704Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: usb-audio: Fix out-of-bounds read in snd_usb_get_audioformat_uac3()\n\nIn snd_usb_get_audioformat_uac3(), the length value returned from\nsnd_usb_ctl_msg() is used directly for memory allocation without\nvalidation. This length is controlled by the USB device.\n\nThe allocated buffer is cast to a uac3_cluster_header_descriptor\nand its fields are accessed without verifying that the buffer\nis large enough. If the device returns a smaller than expected\nlength, this leads to an out-of-bounds read.\n\nAdd a length check to ensure the buffer is large enough for\nuac3_cluster_header_descriptor.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/6eb211788e1370af52a245d4d7da35c374c7b401",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/74fcb3852a2f579151ce80b9ed96cd916ba0d5d8",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/0ee87c2814deb5e42921281116ac3abcb326880b",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/11e740dc1a2c8590eb7074b5c4ab921bb6224c36",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/fb4e2a6e8f28a3c0ad382e363aeb9cd822007b8a",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "sound/usb/stream.c"
          ],
          "versions": [
            {
              "version": "9a2fe9b801f585baccf8352d82839dcd54b300cf",
              "lessThan": "6eb211788e1370af52a245d4d7da35c374c7b401",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "9a2fe9b801f585baccf8352d82839dcd54b300cf",
              "lessThan": "74fcb3852a2f579151ce80b9ed96cd916ba0d5d8",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "9a2fe9b801f585baccf8352d82839dcd54b300cf",
              "lessThan": "0ee87c2814deb5e42921281116ac3abcb326880b",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "9a2fe9b801f585baccf8352d82839dcd54b300cf",
              "lessThan": "11e740dc1a2c8590eb7074b5c4ab921bb6224c36",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "9a2fe9b801f585baccf8352d82839dcd54b300cf",
              "lessThan": "fb4e2a6e8f28a3c0ad382e363aeb9cd822007b8a",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "sound/usb/stream.c"
          ],
          "versions": [
            {
              "version": "4.17",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "4.17",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.1.143",
              "lessThanOrEqual": "6.1.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.6.96",
              "lessThanOrEqual": "6.6.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.12.36",
              "lessThanOrEqual": "6.12.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38248",
      "publishedDate": "2025-07-09T10:42:29.133Z",
      "lastModifiedDate": "2025-07-09T10:42:29.133Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbridge: mcast: Fix use-after-free during router port configuration\n\nThe bridge maintains a global list of ports behind which a multicast\nrouter resides. The list is consulted during forwarding to ensure\nmulticast packets are forwarded to these ports even if the ports are not\nmember in the matching MDB entry.\n\nWhen per-VLAN multicast snooping is enabled, the per-port multicast\ncontext is disabled on each port and the port is removed from the global\nrouter port list:\n\n # ip link add name br1 up type bridge vlan_filtering 1 mcast_snooping 1\n # ip link add name dummy1 up master br1 type dummy\n # ip link set dev dummy1 type bridge_slave mcast_router 2\n $ bridge -d mdb show | grep router\n router ports on br1: dummy1\n # ip link set dev br1 type bridge mcast_vlan_snooping 1\n $ bridge -d mdb show | grep router\n\nHowever, the port can be re-added to the global list even when per-VLAN\nmulticast snooping is enabled:\n\n # ip link set dev dummy1 type bridge_slave mcast_router 0\n # ip link set dev dummy1 type bridge_slave mcast_router 2\n $ bridge -d mdb show | grep router\n router ports on br1: dummy1\n\nSince commit 4b30ae9adb04 (\"net: bridge: mcast: re-implement\nbr_multicast_{enable, disable}_port functions\"), when per-VLAN multicast\nsnooping is enabled, multicast disablement on a port will disable the\nper-{port, VLAN} multicast contexts and not the per-port one. As a\nresult, a port will remain in the global router port list even after it\nis deleted. This will lead to a use-after-free [1] when the list is\ntraversed (when adding a new port to the list, for example):\n\n # ip link del dev dummy1\n # ip link add name dummy2 up master br1 type dummy\n # ip link set dev dummy2 type bridge_slave mcast_router 2\n\nSimilarly, stale entries can also be found in the per-VLAN router port\nlist. When per-VLAN multicast snooping is disabled, the per-{port, VLAN}\ncontexts are disabled on each port and the port is removed from the\nper-VLAN router port list:\n\n # ip link add name br1 up type bridge vlan_filtering 1 mcast_snooping 1 mcast_vlan_snooping 1\n # ip link add name dummy1 up master br1 type dummy\n # bridge vlan add vid 2 dev dummy1\n # bridge vlan global set vid 2 dev br1 mcast_snooping 1\n # bridge vlan set vid 2 dev dummy1 mcast_router 2\n $ bridge vlan global show dev br1 vid 2 | grep router\n       router ports: dummy1\n # ip link set dev br1 type bridge mcast_vlan_snooping 0\n $ bridge vlan global show dev br1 vid 2 | grep router\n\nHowever, the port can be re-added to the per-VLAN list even when\nper-VLAN multicast snooping is disabled:\n\n # bridge vlan set vid 2 dev dummy1 mcast_router 0\n # bridge vlan set vid 2 dev dummy1 mcast_router 2\n $ bridge vlan global show dev br1 vid 2 | grep router\n       router ports: dummy1\n\nWhen the VLAN is deleted from the port, the per-{port, VLAN} multicast\ncontext will not be disabled since multicast snooping is not enabled\non the VLAN. As a result, the port will remain in the per-VLAN router\nport list even after it is no longer member in the VLAN. This will lead\nto a use-after-free [2] when the list is traversed (when adding a new\nport to the list, for example):\n\n # ip link add name dummy2 up master br1 type dummy\n # bridge vlan add vid 2 dev dummy2\n # bridge vlan del vid 2 dev dummy1\n # bridge vlan set vid 2 dev dummy2 mcast_router 2\n\nFix these issues by removing the port from the relevant (global or\nper-VLAN) router port list in br_multicast_port_ctx_deinit(). The\nfunction is invoked during port deletion with the per-port multicast\ncontext and during VLAN deletion with the per-{port, VLAN} multicast\ncontext.\n\nNote that deleting the multicast router timer is not enough as it only\ntakes care of the temporary multicast router states (1 or 3) and not the\npermanent one (2).\n\n[1]\nBUG: KASAN: slab-out-of-bounds in br_multicast_add_router.part.0+0x3f1/0x560\nWrite of size 8 at addr ffff888004a67328 by task ip/384\n[...]\nCall Trace:\n <TASK>\n dump_stack\n---truncated---",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/f05a4f9e959e0fc098046044c650acf897ea52d2",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/7544f3f5b0b58c396f374d060898b5939da31709",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "net/bridge/br_multicast.c"
          ],
          "versions": [
            {
              "version": "2796d846d74a18cc6563e96eff8bf28c5e06f912",
              "lessThan": "f05a4f9e959e0fc098046044c650acf897ea52d2",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "2796d846d74a18cc6563e96eff8bf28c5e06f912",
              "lessThan": "7544f3f5b0b58c396f374d060898b5939da31709",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "net/bridge/br_multicast.c"
          ],
          "versions": [
            {
              "version": "5.15",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "5.15",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38247",
      "publishedDate": "2025-07-09T10:42:28.531Z",
      "lastModifiedDate": "2025-07-09T10:42:28.531Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nuserns and mnt_idmap leak in open_tree_attr(2)\n\nOnce want_mount_setattr() has returned a positive, it does require\nfinish_mount_kattr() to release ->mnt_userns.  Failing do_mount_setattr()\ndoes not change that.\n\nAs the result, we can end up leaking userns and possibly mnt_idmap as\nwell.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/142db4e76110dd80239f4e79810f85ea1735ad60",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/0748e553df0225754c316a92af3a77fdc057b358",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "fs/namespace.c"
          ],
          "versions": [
            {
              "version": "c4a16820d90199409c9bf01c4f794e1e9e8d8fd8",
              "lessThan": "142db4e76110dd80239f4e79810f85ea1735ad60",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "c4a16820d90199409c9bf01c4f794e1e9e8d8fd8",
              "lessThan": "0748e553df0225754c316a92af3a77fdc057b358",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "fs/namespace.c"
          ],
          "versions": [
            {
              "version": "6.15",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "6.15",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38246",
      "publishedDate": "2025-07-09T10:42:27.908Z",
      "lastModifiedDate": "2025-07-09T10:42:27.908Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbnxt: properly flush XDP redirect lists\n\nWe encountered following crash when testing a XDP_REDIRECT feature\nin production:\n\n[56251.579676] list_add corruption. next->prev should be prev (ffff93120dd40f30), but was ffffb301ef3a6740. (next=ffff93120dd\n40f30).\n[56251.601413] ------------[ cut here ]------------\n[56251.611357] kernel BUG at lib/list_debug.c:29!\n[56251.621082] Oops: invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\n[56251.632073] CPU: 111 UID: 0 PID: 0 Comm: swapper/111 Kdump: loaded Tainted: P           O       6.12.33-cloudflare-2025.6.\n3 #1\n[56251.653155] Tainted: [P]=PROPRIETARY_MODULE, [O]=OOT_MODULE\n[56251.663877] Hardware name: MiTAC GC68B-B8032-G11P6-GPU/S8032GM-HE-CFR, BIOS V7.020.B10-sig 01/22/2025\n[56251.682626] RIP: 0010:__list_add_valid_or_report+0x4b/0xa0\n[56251.693203] Code: 0e 48 c7 c7 68 e7 d9 97 e8 42 16 fe ff 0f 0b 48 8b 52 08 48 39 c2 74 14 48 89 f1 48 c7 c7 90 e7 d9 97 48\n 89 c6 e8 25 16 fe ff <0f> 0b 4c 8b 02 49 39 f0 74 14 48 89 d1 48 c7 c7 e8 e7 d9 97 4c 89\n[56251.725811] RSP: 0018:ffff93120dd40b80 EFLAGS: 00010246\n[56251.736094] RAX: 0000000000000075 RBX: ffffb301e6bba9d8 RCX: 0000000000000000\n[56251.748260] RDX: 0000000000000000 RSI: ffff9149afda0b80 RDI: ffff9149afda0b80\n[56251.760349] RBP: ffff9131e49c8000 R08: 0000000000000000 R09: ffff93120dd40a18\n[56251.772382] R10: ffff9159cf2ce1a8 R11: 0000000000000003 R12: ffff911a80850000\n[56251.784364] R13: ffff93120fbc7000 R14: 0000000000000010 R15: ffff9139e7510e40\n[56251.796278] FS:  0000000000000000(0000) GS:ffff9149afd80000(0000) knlGS:0000000000000000\n[56251.809133] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[56251.819561] CR2: 00007f5e85e6f300 CR3: 00000038b85e2006 CR4: 0000000000770ef0\n[56251.831365] PKRU: 55555554\n[56251.838653] Call Trace:\n[56251.845560]  <IRQ>\n[56251.851943]  cpu_map_enqueue.cold+0x5/0xa\n[56251.860243]  xdp_do_redirect+0x2d9/0x480\n[56251.868388]  bnxt_rx_xdp+0x1d8/0x4c0 [bnxt_en]\n[56251.877028]  bnxt_rx_pkt+0x5f7/0x19b0 [bnxt_en]\n[56251.885665]  ? cpu_max_write+0x1e/0x100\n[56251.893510]  ? srso_alias_return_thunk+0x5/0xfbef5\n[56251.902276]  __bnxt_poll_work+0x190/0x340 [bnxt_en]\n[56251.911058]  bnxt_poll+0xab/0x1b0 [bnxt_en]\n[56251.919041]  ? srso_alias_return_thunk+0x5/0xfbef5\n[56251.927568]  ? srso_alias_return_thunk+0x5/0xfbef5\n[56251.935958]  ? srso_alias_return_thunk+0x5/0xfbef5\n[56251.944250]  __napi_poll+0x2b/0x160\n[56251.951155]  bpf_trampoline_6442548651+0x79/0x123\n[56251.959262]  __napi_poll+0x5/0x160\n[56251.966037]  net_rx_action+0x3d2/0x880\n[56251.973133]  ? srso_alias_return_thunk+0x5/0xfbef5\n[56251.981265]  ? srso_alias_return_thunk+0x5/0xfbef5\n[56251.989262]  ? __hrtimer_run_queues+0x162/0x2a0\n[56251.996967]  ? srso_alias_return_thunk+0x5/0xfbef5\n[56252.004875]  ? srso_alias_return_thunk+0x5/0xfbef5\n[56252.012673]  ? bnxt_msix+0x62/0x70 [bnxt_en]\n[56252.019903]  handle_softirqs+0xcf/0x270\n[56252.026650]  irq_exit_rcu+0x67/0x90\n[56252.032933]  common_interrupt+0x85/0xa0\n[56252.039498]  </IRQ>\n[56252.044246]  <TASK>\n[56252.048935]  asm_common_interrupt+0x26/0x40\n[56252.055727] RIP: 0010:cpuidle_enter_state+0xb8/0x420\n[56252.063305] Code: dc 01 00 00 e8 f9 79 3b ff e8 64 f7 ff ff 49 89 c5 0f 1f 44 00 00 31 ff e8 a5 32 3a ff 45 84 ff 0f 85 ae\n 01 00 00 fb 45 85 f6 <0f> 88 88 01 00 00 48 8b 04 24 49 63 ce 4c 89 ea 48 6b f1 68 48 29\n[56252.088911] RSP: 0018:ffff93120c97fe98 EFLAGS: 00000202\n[56252.096912] RAX: ffff9149afd80000 RBX: ffff9141d3a72800 RCX: 0000000000000000\n[56252.106844] RDX: 00003329176c6b98 RSI: ffffffe36db3fdc7 RDI: 0000000000000000\n[56252.116733] RBP: 0000000000000002 R08: 0000000000000002 R09: 000000000000004e\n[56252.126652] R10: ffff9149afdb30c4 R11: 071c71c71c71c71c R12: ffffffff985ff860\n[56252.136637] R13: 00003329176c6b98 R14: 0000000000000002 R15: 0000000000000000\n[56252.146667]  ? cpuidle_enter_state+0xab/0x420\n[56252.153909]  cpuidle_enter+0x2d/0x40\n[56252.160360]  do_idle+0x176/0x1c0\n[56252.166456\n---truncated---",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/c6665b8f0f58082c480ed8627029f44d046ef2c8",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/02bf488d56df9db4f5147280b65d9011e1ab88d2",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/9caca6ac0e26cd20efd490d8b3b2ffb1c7c00f6f",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/net/ethernet/broadcom/bnxt/bnxt.c"
          ],
          "versions": [
            {
              "version": "a7559bc8c17c3f9a91dcbeefe8642ba757fd09e8",
              "lessThan": "c6665b8f0f58082c480ed8627029f44d046ef2c8",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "a7559bc8c17c3f9a91dcbeefe8642ba757fd09e8",
              "lessThan": "02bf488d56df9db4f5147280b65d9011e1ab88d2",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "a7559bc8c17c3f9a91dcbeefe8642ba757fd09e8",
              "lessThan": "9caca6ac0e26cd20efd490d8b3b2ffb1c7c00f6f",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/net/ethernet/broadcom/bnxt/bnxt.c"
          ],
          "versions": [
            {
              "version": "5.19",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "5.19",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.12.36",
              "lessThanOrEqual": "6.12.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38245",
      "publishedDate": "2025-07-09T10:42:27.263Z",
      "lastModifiedDate": "2025-07-09T10:42:27.263Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\natm: Release atm_dev_mutex after removing procfs in atm_dev_deregister().\n\nsyzbot reported a warning below during atm_dev_register(). [0]\n\nBefore creating a new device and procfs/sysfs for it, atm_dev_register()\nlooks up a duplicated device by __atm_dev_lookup().  These operations are\ndone under atm_dev_mutex.\n\nHowever, when removing a device in atm_dev_deregister(), it releases the\nmutex just after removing the device from the list that __atm_dev_lookup()\niterates over.\n\nSo, there will be a small race window where the device does not exist on\nthe device list but procfs/sysfs are still not removed, triggering the\nsplat.\n\nLet's hold the mutex until procfs/sysfs are removed in\natm_dev_deregister().\n\n[0]:\nproc_dir_entry 'atm/atmtcp:0' already registered\nWARNING: CPU: 0 PID: 5919 at fs/proc/generic.c:377 proc_register+0x455/0x5f0 fs/proc/generic.c:377\nModules linked in:\nCPU: 0 UID: 0 PID: 5919 Comm: syz-executor284 Not tainted 6.16.0-rc2-syzkaller-00047-g52da431bf03b #0 PREEMPT(full)\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 05/07/2025\nRIP: 0010:proc_register+0x455/0x5f0 fs/proc/generic.c:377\nCode: 48 89 f9 48 c1 e9 03 80 3c 01 00 0f 85 a2 01 00 00 48 8b 44 24 10 48 c7 c7 20 c0 c2 8b 48 8b b0 d8 00 00 00 e8 0c 02 1c ff 90 <0f> 0b 90 90 48 c7 c7 80 f2 82 8e e8 0b de 23 09 48 8b 4c 24 28 48\nRSP: 0018:ffffc9000466fa30 EFLAGS: 00010282\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffffff817ae248\nRDX: ffff888026280000 RSI: ffffffff817ae255 RDI: 0000000000000001\nRBP: ffff8880232bed48 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000001 R12: ffff888076ed2140\nR13: dffffc0000000000 R14: ffff888078a61340 R15: ffffed100edda444\nFS:  00007f38b3b0c6c0(0000) GS:ffff888124753000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f38b3bdf953 CR3: 0000000076d58000 CR4: 00000000003526f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n <TASK>\n proc_create_data+0xbe/0x110 fs/proc/generic.c:585\n atm_proc_dev_register+0x112/0x1e0 net/atm/proc.c:361\n atm_dev_register+0x46d/0x890 net/atm/resources.c:113\n atmtcp_create+0x77/0x210 drivers/atm/atmtcp.c:369\n atmtcp_attach drivers/atm/atmtcp.c:403 [inline]\n atmtcp_ioctl+0x2f9/0xd60 drivers/atm/atmtcp.c:464\n do_vcc_ioctl+0x12c/0x930 net/atm/ioctl.c:159\n sock_do_ioctl+0x115/0x280 net/socket.c:1190\n sock_ioctl+0x227/0x6b0 net/socket.c:1311\n vfs_ioctl fs/ioctl.c:51 [inline]\n __do_sys_ioctl fs/ioctl.c:907 [inline]\n __se_sys_ioctl fs/ioctl.c:893 [inline]\n __x64_sys_ioctl+0x18b/0x210 fs/ioctl.c:893\n do_syscall_x64 arch/x86/entry/syscall_64.c:63 [inline]\n do_syscall_64+0xcd/0x4c0 arch/x86/entry/syscall_64.c:94\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\nRIP: 0033:0x7f38b3b74459\nCode: 28 00 00 00 75 05 48 83 c4 28 c3 e8 51 18 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f38b3b0c198 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\nRAX: ffffffffffffffda RBX: 00007f38b3bfe318 RCX: 00007f38b3b74459\nRDX: 0000000000000000 RSI: 0000000000006180 RDI: 0000000000000005\nRBP: 00007f38b3bfe310 R08: 65732f636f72702f R09: 65732f636f72702f\nR10: 65732f636f72702f R11: 0000000000000246 R12: 00007f38b3bcb0ac\nR13: 00007f38b3b0c1a0 R14: 0000200000000200 R15: 00007f38b3bcb03b\n </TASK>",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/b2e40fcfe1575faaa548f87614006d3fe44c779e",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/cabed6ba92a9a8c09da02a3f20e32ecd80989896",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/ae539d963a17443ec54cba8a767e4ffa318264f4",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/6922f1a048c090f10704bbef4a3a1e81932d2e0a",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/a433791aeaea6e84df709e0b9584b9bbe040cd1c",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "net/atm/resources.c"
          ],
          "versions": [
            {
              "version": "64bf69ddff7637b7ed7acf9b2a823cc0ee519439",
              "lessThan": "b2e40fcfe1575faaa548f87614006d3fe44c779e",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "64bf69ddff7637b7ed7acf9b2a823cc0ee519439",
              "lessThan": "cabed6ba92a9a8c09da02a3f20e32ecd80989896",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "64bf69ddff7637b7ed7acf9b2a823cc0ee519439",
              "lessThan": "ae539d963a17443ec54cba8a767e4ffa318264f4",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "64bf69ddff7637b7ed7acf9b2a823cc0ee519439",
              "lessThan": "6922f1a048c090f10704bbef4a3a1e81932d2e0a",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "64bf69ddff7637b7ed7acf9b2a823cc0ee519439",
              "lessThan": "a433791aeaea6e84df709e0b9584b9bbe040cd1c",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "net/atm/resources.c"
          ],
          "versions": [
            {
              "version": "2.6.15",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "2.6.15",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.1.143",
              "lessThanOrEqual": "6.1.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.6.96",
              "lessThanOrEqual": "6.6.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.12.36",
              "lessThanOrEqual": "6.12.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38244",
      "publishedDate": "2025-07-09T10:42:26.622Z",
      "lastModifiedDate": "2025-07-09T10:42:26.622Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsmb: client: fix potential deadlock when reconnecting channels\n\nFix cifs_signal_cifsd_for_reconnect() to take the correct lock order\nand prevent the following deadlock from happening\n\n======================================================\nWARNING: possible circular locking dependency detected\n6.16.0-rc3-build2+ #1301 Tainted: G S      W\n------------------------------------------------------\ncifsd/6055 is trying to acquire lock:\nffff88810ad56038 (&tcp_ses->srv_lock){+.+.}-{3:3}, at: cifs_signal_cifsd_for_reconnect+0x134/0x200\n\nbut task is already holding lock:\nffff888119c64330 (&ret_buf->chan_lock){+.+.}-{3:3}, at: cifs_signal_cifsd_for_reconnect+0xcf/0x200\n\nwhich lock already depends on the new lock.\n\nthe existing dependency chain (in reverse order) is:\n\n-> #2 (&ret_buf->chan_lock){+.+.}-{3:3}:\n       validate_chain+0x1cf/0x270\n       __lock_acquire+0x60e/0x780\n       lock_acquire.part.0+0xb4/0x1f0\n       _raw_spin_lock+0x2f/0x40\n       cifs_setup_session+0x81/0x4b0\n       cifs_get_smb_ses+0x771/0x900\n       cifs_mount_get_session+0x7e/0x170\n       cifs_mount+0x92/0x2d0\n       cifs_smb3_do_mount+0x161/0x460\n       smb3_get_tree+0x55/0x90\n       vfs_get_tree+0x46/0x180\n       do_new_mount+0x1b0/0x2e0\n       path_mount+0x6ee/0x740\n       do_mount+0x98/0xe0\n       __do_sys_mount+0x148/0x180\n       do_syscall_64+0xa4/0x260\n       entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\n-> #1 (&ret_buf->ses_lock){+.+.}-{3:3}:\n       validate_chain+0x1cf/0x270\n       __lock_acquire+0x60e/0x780\n       lock_acquire.part.0+0xb4/0x1f0\n       _raw_spin_lock+0x2f/0x40\n       cifs_match_super+0x101/0x320\n       sget+0xab/0x270\n       cifs_smb3_do_mount+0x1e0/0x460\n       smb3_get_tree+0x55/0x90\n       vfs_get_tree+0x46/0x180\n       do_new_mount+0x1b0/0x2e0\n       path_mount+0x6ee/0x740\n       do_mount+0x98/0xe0\n       __do_sys_mount+0x148/0x180\n       do_syscall_64+0xa4/0x260\n       entry_SYSCALL_64_after_hwframe+0x76/0x7e\n\n-> #0 (&tcp_ses->srv_lock){+.+.}-{3:3}:\n       check_noncircular+0x95/0xc0\n       check_prev_add+0x115/0x2f0\n       validate_chain+0x1cf/0x270\n       __lock_acquire+0x60e/0x780\n       lock_acquire.part.0+0xb4/0x1f0\n       _raw_spin_lock+0x2f/0x40\n       cifs_signal_cifsd_for_reconnect+0x134/0x200\n       __cifs_reconnect+0x8f/0x500\n       cifs_handle_standard+0x112/0x280\n       cifs_demultiplex_thread+0x64d/0xbc0\n       kthread+0x2f7/0x310\n       ret_from_fork+0x2a/0x230\n       ret_from_fork_asm+0x1a/0x30\n\nother info that might help us debug this:\n\nChain exists of:\n  &tcp_ses->srv_lock --> &ret_buf->ses_lock --> &ret_buf->chan_lock\n\n Possible unsafe locking scenario:\n\n       CPU0                    CPU1\n       ----                    ----\n  lock(&ret_buf->chan_lock);\n                               lock(&ret_buf->ses_lock);\n                               lock(&ret_buf->chan_lock);\n  lock(&tcp_ses->srv_lock);\n\n *** DEADLOCK ***\n\n3 locks held by cifsd/6055:\n #0: ffffffff857de398 (&cifs_tcp_ses_lock){+.+.}-{3:3}, at: cifs_signal_cifsd_for_reconnect+0x7b/0x200\n #1: ffff888119c64060 (&ret_buf->ses_lock){+.+.}-{3:3}, at: cifs_signal_cifsd_for_reconnect+0x9c/0x200\n #2: ffff888119c64330 (&ret_buf->chan_lock){+.+.}-{3:3}, at: cifs_signal_cifsd_for_reconnect+0xcf/0x200",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/c82c7041258d96e3286f6790ab700e4edd3cc9e3",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/7f3ead8ebc0ef65b6c89a13912b4e80218425629",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/fe035dc78aa6ca8f862857d45beaf7a0e03206ca",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/711741f94ac3cf9f4e3aa73aa171e76d188c0819",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "fs/smb/client/cifsglob.h",
            "fs/smb/client/connect.c"
          ],
          "versions": [
            {
              "version": "d7d7a66aacd6fd8ca57baf08a7bac5421282f6f8",
              "lessThan": "c82c7041258d96e3286f6790ab700e4edd3cc9e3",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "d7d7a66aacd6fd8ca57baf08a7bac5421282f6f8",
              "lessThan": "7f3ead8ebc0ef65b6c89a13912b4e80218425629",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "d7d7a66aacd6fd8ca57baf08a7bac5421282f6f8",
              "lessThan": "fe035dc78aa6ca8f862857d45beaf7a0e03206ca",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "d7d7a66aacd6fd8ca57baf08a7bac5421282f6f8",
              "lessThan": "711741f94ac3cf9f4e3aa73aa171e76d188c0819",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "fs/smb/client/cifsglob.h",
            "fs/smb/client/connect.c"
          ],
          "versions": [
            {
              "version": "6.0",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "6.0",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.6.96",
              "lessThanOrEqual": "6.6.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.12.36",
              "lessThanOrEqual": "6.12.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38243",
      "publishedDate": "2025-07-09T10:42:26.014Z",
      "lastModifiedDate": "2025-07-09T10:42:26.014Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: fix invalid inode pointer dereferences during log replay\n\nIn a few places where we call read_one_inode(), if we get a NULL pointer\nwe end up jumping into an error path, or fallthrough in case of\n__add_inode_ref(), where we then do something like this:\n\n   iput(&inode->vfs_inode);\n\nwhich results in an invalid inode pointer that triggers an invalid memory\naccess, resulting in a crash.\n\nFix this by making sure we don't do such dereferences.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/ba8386d662cc51cc5382688bbf7a152b0b0b27cf",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/2dcf838cf5c2f0f4501edaa1680fcad03618d760",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "fs/btrfs/tree-log.c"
          ],
          "versions": [
            {
              "version": "b4c50cbb01a1b6901d2b94469636dd80fa93de81",
              "lessThan": "ba8386d662cc51cc5382688bbf7a152b0b0b27cf",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "b4c50cbb01a1b6901d2b94469636dd80fa93de81",
              "lessThan": "2dcf838cf5c2f0f4501edaa1680fcad03618d760",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "fs/btrfs/tree-log.c"
          ],
          "versions": [
            {
              "version": "6.15",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "6.15",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38242",
      "publishedDate": "2025-07-09T10:42:25.396Z",
      "lastModifiedDate": "2025-07-09T10:42:25.396Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: userfaultfd: fix race of userfaultfd_move and swap cache\n\nThis commit fixes two kinds of races, they may have different results:\n\nBarry reported a BUG_ON in commit c50f8e6053b0, we may see the same\nBUG_ON if the filemap lookup returned NULL and folio is added to swap\ncache after that.\n\nIf another kind of race is triggered (folio changed after lookup) we\nmay see RSS counter is corrupted:\n\n[  406.893936] BUG: Bad rss-counter state mm:ffff0000c5a9ddc0\ntype:MM_ANONPAGES val:-1\n[  406.894071] BUG: Bad rss-counter state mm:ffff0000c5a9ddc0\ntype:MM_SHMEMPAGES val:1\n\nBecause the folio is being accounted to the wrong VMA.\n\nI'm not sure if there will be any data corruption though, seems no. \nThe issues above are critical already.\n\n\nOn seeing a swap entry PTE, userfaultfd_move does a lockless swap cache\nlookup, and tries to move the found folio to the faulting vma.  Currently,\nit relies on checking the PTE value to ensure that the moved folio still\nbelongs to the src swap entry and that no new folio has been added to the\nswap cache, which turns out to be unreliable.\n\nWhile working and reviewing the swap table series with Barry, following\nexisting races are observed and reproduced [1]:\n\nIn the example below, move_pages_pte is moving src_pte to dst_pte, where\nsrc_pte is a swap entry PTE holding swap entry S1, and S1 is not in the\nswap cache:\n\nCPU1                               CPU2\nuserfaultfd_move\n  move_pages_pte()\n    entry = pte_to_swp_entry(orig_src_pte);\n    // Here it got entry = S1\n    ... < interrupted> ...\n                                   <swapin src_pte, alloc and use folio A>\n                                   // folio A is a new allocated folio\n                                   // and get installed into src_pte\n                                   <frees swap entry S1>\n                                   // src_pte now points to folio A, S1\n                                   // has swap count == 0, it can be freed\n                                   // by folio_swap_swap or swap\n                                   // allocator's reclaim.\n                                   <try to swap out another folio B>\n                                   // folio B is a folio in another VMA.\n                                   <put folio B to swap cache using S1 >\n                                   // S1 is freed, folio B can use it\n                                   // for swap out with no problem.\n                                   ...\n    folio = filemap_get_folio(S1)\n    // Got folio B here !!!\n    ... < interrupted again> ...\n                                   <swapin folio B and free S1>\n                                   // Now S1 is free to be used again.\n                                   <swapout src_pte & folio A using S1>\n                                   // Now src_pte is a swap entry PTE\n                                   // holding S1 again.\n    folio_trylock(folio)\n    move_swap_pte\n      double_pt_lock\n      is_pte_pages_stable\n      // Check passed because src_pte == S1\n      folio_move_anon_rmap(...)\n      // Moved invalid folio B here !!!\n\nThe race window is very short and requires multiple collisions of multiple\nrare events, so it's very unlikely to happen, but with a deliberately\nconstructed reproducer and increased time window, it can be reproduced\neasily.\n\nThis can be fixed by checking if the folio returned by filemap is the\nvalid swap cache folio after acquiring the folio lock.\n\nAnother similar race is possible: filemap_get_folio may return NULL, but\nfolio (A) could be swapped in and then swapped out again using the same\nswap entry after the lookup.  In such a case, folio (A) may remain in the\nswap cache, so it must be moved too:\n\nCPU1                               CPU2\nuserfaultfd_move\n  move_pages_pte()\n    entry = pte_to_swp_entry(orig_src_pte);\n    // Here it got entry = S1, and S1 is not in swap cache\n    folio = filemap_get\n---truncated---",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/db2ca8074955ca64187a4fb596dd290b9c446cd3",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/0ea148a799198518d8ebab63ddd0bb6114a103bc",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "mm/userfaultfd.c"
          ],
          "versions": [
            {
              "version": "adef440691bab824e39c1b17382322d195e1fab0",
              "lessThan": "db2ca8074955ca64187a4fb596dd290b9c446cd3",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "adef440691bab824e39c1b17382322d195e1fab0",
              "lessThan": "0ea148a799198518d8ebab63ddd0bb6114a103bc",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "mm/userfaultfd.c"
          ],
          "versions": [
            {
              "version": "6.8",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "6.8",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38241",
      "publishedDate": "2025-07-09T10:42:24.777Z",
      "lastModifiedDate": "2025-07-09T10:42:24.777Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/shmem, swap: fix softlockup with mTHP swapin\n\nFollowing softlockup can be easily reproduced on my test machine with:\n\necho always > /sys/kernel/mm/transparent_hugepage/hugepages-64kB/enabled\nswapon /dev/zram0 # zram0 is a 48G swap device\nmkdir -p /sys/fs/cgroup/memory/test\necho 1G > /sys/fs/cgroup/test/memory.max\necho $BASHPID > /sys/fs/cgroup/test/cgroup.procs\nwhile true; do\n    dd if=/dev/zero of=/tmp/test.img bs=1M count=5120\n    cat /tmp/test.img > /dev/null\n    rm /tmp/test.img\ndone\n\nThen after a while:\nwatchdog: BUG: soft lockup - CPU#0 stuck for 763s! [cat:5787]\nModules linked in: zram virtiofs\nCPU: 0 UID: 0 PID: 5787 Comm: cat Kdump: loaded Tainted: G             L      6.15.0.orig-gf3021d9246bc-dirty #118 PREEMPT(voluntary)·\nTainted: [L]=SOFTLOCKUP\nHardware name: Red Hat KVM/RHEL-AV, BIOS 0.0.0 02/06/2015\nRIP: 0010:mpol_shared_policy_lookup+0xd/0x70\nCode: e9 b8 b4 ff ff 31 c0 c3 cc cc cc cc 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 66 0f 1f 00 0f 1f 44 00 00 41 54 55 53 <48> 8b 1f 48 85 db 74 41 4c 8d 67 08 48 89 fb 48 89 f5 4c 89 e7 e8\nRSP: 0018:ffffc90002b1fc28 EFLAGS: 00000202\nRAX: 00000000001c20ca RBX: 0000000000724e1e RCX: 0000000000000001\nRDX: ffff888118e214c8 RSI: 0000000000057d42 RDI: ffff888118e21518\nRBP: 000000000002bec8 R08: 0000000000000001 R09: 0000000000000000\nR10: 0000000000000bf4 R11: 0000000000000000 R12: 0000000000000001\nR13: 00000000001c20ca R14: 00000000001c20ca R15: 0000000000000000\nFS:  00007f03f995c740(0000) GS:ffff88a07ad9a000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f03f98f1000 CR3: 0000000144626004 CR4: 0000000000770eb0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n <TASK>\n shmem_alloc_folio+0x31/0xc0\n shmem_swapin_folio+0x309/0xcf0\n ? filemap_get_entry+0x117/0x1e0\n ? xas_load+0xd/0xb0\n ? filemap_get_entry+0x101/0x1e0\n shmem_get_folio_gfp+0x2ed/0x5b0\n shmem_file_read_iter+0x7f/0x2e0\n vfs_read+0x252/0x330\n ksys_read+0x68/0xf0\n do_syscall_64+0x4c/0x1c0\n entry_SYSCALL_64_after_hwframe+0x76/0x7e\nRIP: 0033:0x7f03f9a46991\nCode: 00 48 8b 15 81 14 10 00 f7 d8 64 89 02 b8 ff ff ff ff eb bd e8 20 ad 01 00 f3 0f 1e fa 80 3d 35 97 10 00 00 74 13 31 c0 0f 05 <48> 3d 00 f0 ff ff 77 4f c3 66 0f 1f 44 00 00 55 48 89 e5 48 83 ec\nRSP: 002b:00007fff3c52bd28 EFLAGS: 00000246 ORIG_RAX: 0000000000000000\nRAX: ffffffffffffffda RBX: 0000000000040000 RCX: 00007f03f9a46991\nRDX: 0000000000040000 RSI: 00007f03f98ba000 RDI: 0000000000000003\nRBP: 00007fff3c52bd50 R08: 0000000000000000 R09: 00007f03f9b9a380\nR10: 0000000000000022 R11: 0000000000000246 R12: 0000000000040000\nR13: 00007f03f98ba000 R14: 0000000000000003 R15: 0000000000000000\n </TASK>\n\nThe reason is simple, readahead brought some order 0 folio in swap cache,\nand the swapin mTHP folio being allocated is in conflict with it, so\nswapcache_prepare fails and causes shmem_swap_alloc_folio to return\n-EEXIST, and shmem simply retries again and again causing this loop.\n\nFix it by applying a similar fix for anon mTHP swapin.\n\nThe performance change is very slight, time of swapin 10g zero folios\nwith shmem (test for 12 times):\nBefore:  2.47s\nAfter:   2.48s\n\n[kasong@tencent.com: add comment]",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/1283dfc1e0cd52cf525c2cb1b59a6f9183aab7ca",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/a05dd8ae5cbb1cb45f349922cfea4f548a5e5d6f",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "mm/memory.c",
            "mm/shmem.c",
            "mm/swap.h"
          ],
          "versions": [
            {
              "version": "1dd44c0af4fa1e80a4e82faa10cbf5d22da40362",
              "lessThan": "1283dfc1e0cd52cf525c2cb1b59a6f9183aab7ca",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "1dd44c0af4fa1e80a4e82faa10cbf5d22da40362",
              "lessThan": "a05dd8ae5cbb1cb45f349922cfea4f548a5e5d6f",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "mm/memory.c",
            "mm/shmem.c",
            "mm/swap.h"
          ],
          "versions": [
            {
              "version": "6.14",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "6.14",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38239",
      "publishedDate": "2025-07-09T10:42:24.170Z",
      "lastModifiedDate": "2025-07-09T10:42:24.170Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: megaraid_sas: Fix invalid node index\n\nOn a system with DRAM interleave enabled, out-of-bound access is\ndetected:\n\nmegaraid_sas 0000:3f:00.0: requested/available msix 128/128 poll_queue 0\n------------[ cut here ]------------\nUBSAN: array-index-out-of-bounds in ./arch/x86/include/asm/topology.h:72:28\nindex -1 is out of range for type 'cpumask *[1024]'\ndump_stack_lvl+0x5d/0x80\nubsan_epilogue+0x5/0x2b\n__ubsan_handle_out_of_bounds.cold+0x46/0x4b\nmegasas_alloc_irq_vectors+0x149/0x190 [megaraid_sas]\nmegasas_probe_one.cold+0xa4d/0x189c [megaraid_sas]\nlocal_pci_probe+0x42/0x90\npci_device_probe+0xdc/0x290\nreally_probe+0xdb/0x340\n__driver_probe_device+0x78/0x110\ndriver_probe_device+0x1f/0xa0\n__driver_attach+0xba/0x1c0\nbus_for_each_dev+0x8b/0xe0\nbus_add_driver+0x142/0x220\ndriver_register+0x72/0xd0\nmegasas_init+0xdf/0xff0 [megaraid_sas]\ndo_one_initcall+0x57/0x310\ndo_init_module+0x90/0x250\ninit_module_from_file+0x85/0xc0\nidempotent_init_module+0x114/0x310\n__x64_sys_finit_module+0x65/0xc0\ndo_syscall_64+0x82/0x170\nentry_SYSCALL_64_after_hwframe+0x76/0x7e\n\nFix it accordingly.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/f1064b3532192e987ab17be7281d5fee36fd25e1",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/bf2c1643abc3b2507d56bb6c22bf9897272f8a35",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/19a47c966deb36624843b7301f0373a3dc541a05",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/074efb35552556a4b3b25eedab076d5dc24a8199",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/752eb816b55adb0673727ba0ed96609a17895654",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/scsi/megaraid/megaraid_sas_base.c"
          ],
          "versions": [
            {
              "version": "8049da6f3943d0ac51931b8064b2e4769a69a967",
              "lessThan": "f1064b3532192e987ab17be7281d5fee36fd25e1",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "8049da6f3943d0ac51931b8064b2e4769a69a967",
              "lessThan": "bf2c1643abc3b2507d56bb6c22bf9897272f8a35",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "8049da6f3943d0ac51931b8064b2e4769a69a967",
              "lessThan": "19a47c966deb36624843b7301f0373a3dc541a05",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "8049da6f3943d0ac51931b8064b2e4769a69a967",
              "lessThan": "074efb35552556a4b3b25eedab076d5dc24a8199",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "8049da6f3943d0ac51931b8064b2e4769a69a967",
              "lessThan": "752eb816b55adb0673727ba0ed96609a17895654",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/scsi/megaraid/megaraid_sas_base.c"
          ],
          "versions": [
            {
              "version": "5.17",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "5.17",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.1.143",
              "lessThanOrEqual": "6.1.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.6.96",
              "lessThanOrEqual": "6.6.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.12.36",
              "lessThanOrEqual": "6.12.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-38238",
      "publishedDate": "2025-07-09T10:42:23.538Z",
      "lastModifiedDate": "2025-07-09T10:42:23.538Z",
      "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: fnic: Fix crash in fnic_wq_cmpl_handler when FDMI times out\n\nWhen both the RHBA and RPA FDMI requests time out, fnic reuses a frame to\nsend ABTS for each of them. On send completion, this causes an attempt to\nfree the same frame twice that leads to a crash.\n\nFix crash by allocating separate frames for RHBA and RPA, and modify ABTS\nlogic accordingly.\n\nTested by checking MDS for FDMI information.\n\nTested by using instrumented driver to:\n\n - Drop PLOGI response\n - Drop RHBA response\n - Drop RPA response\n - Drop RHBA and RPA response\n - Drop PLOGI response + ABTS response\n - Drop RHBA response + ABTS response\n - Drop RPA response + ABTS response\n - Drop RHBA and RPA response + ABTS response for both of them",
      "severity": "N/A",
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/09679e9abedfbc5a2590759a1a7893c1c26e6044",
          "type": "reference"
        },
        {
          "url": "https://git.kernel.org/stable/c/a35b29bdedb4d2ae3160d4d6684a6f1ecd9ca7c2",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/scsi/fnic/fdls_disc.c",
            "drivers/scsi/fnic/fnic.h",
            "drivers/scsi/fnic/fnic_fdls.h"
          ],
          "versions": [
            {
              "version": "09c1e6ab4ab2a107d96f119950dc330e446dc2b0",
              "lessThan": "09679e9abedfbc5a2590759a1a7893c1c26e6044",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "09c1e6ab4ab2a107d96f119950dc330e446dc2b0",
              "lessThan": "a35b29bdedb4d2ae3160d4d6684a6f1ecd9ca7c2",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/scsi/fnic/fdls_disc.c",
            "drivers/scsi/fnic/fnic.h",
            "drivers/scsi/fnic/fnic_fdls.h"
          ],
          "versions": [
            {
              "version": "6.14",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "6.14",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.5",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16-rc4",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-53479",
      "publishedDate": "2025-07-08T17:16:36.081Z",
      "lastModifiedDate": "2025-07-09T10:38:20.867Z",
      "description": "The CheckUser extension’s Special:CheckUser interface is vulnerable to reflected XSS via the rev-deleted-user message. This message is rendered without proper escaping, making it possible to inject JavaScript through the uselang=x-xss language override mechanism.\n\n\n\n\nThis issue affects Mediawiki - CheckUser extension: from 1.42.X before 1.42.7, from 1.43.X before 1.43.2.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://phabricator.wikimedia.org/T394693",
          "type": "reference"
        },
        {
          "url": "https://gerrit.wikimedia.org/r/q/I159e14543912cb3bc7f4a00c3090c0285b154786",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "defaultStatus": "unaffected",
          "product": "Mediawiki - CheckUser extension",
          "vendor": "Wikimedia Foundation",
          "versions": [
            {
              "lessThan": "1.42.7",
              "status": "affected",
              "version": "1.42.x",
              "versionType": "semver"
            },
            {
              "lessThan": "1.43.2",
              "status": "affected",
              "version": "1.43.x",
              "versionType": "semver"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-79 Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    }
  ]
}