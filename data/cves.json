{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "total_count": 6,
    "last_updated": "2025-04-23T18:26:25.154223",
    "severity_distribution": {
      "critical": 0,
      "high": 0,
      "medium": 0,
      "low": 0,
      "none": 6
    }
  },
  "cves": [
    {
      "id": "CVE-2025-3673",
      "publishedDate": "2025-04-23T18:26:18.875577+00:00",
      "lastModifiedDate": "2025-04-23T18:16:30.693Z",
      "description": "",
      "severity": "N/A",
      "references": [],
      "affected": [],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-2764",
      "publishedDate": "2025-04-23T16:48:43.116Z",
      "lastModifiedDate": "2025-04-23T18:08:36.195Z",
      "description": "CarlinKit CPC200-CCPA update.cgi Improper Verification of Cryptographic Signature Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of CarlinKit CPC200-CCPA devices. Although authentication is required to exploit this vulnerability, the existing authentication mechanism can be bypassed.\n\nThe specific flaw exists within the handling of update packages provided to update.cgi. The issue results from the lack of proper verification of a cryptographic signature. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-24355.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://www.zerodayinitiative.com/advisories/ZDI-25-178/",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "CarlinKit",
          "product": "CPC200-CCPA",
          "versions": [
            {
              "version": "2024.01.19.1541",
              "status": "affected"
            }
          ],
          "defaultStatus": "unknown"
        }
      ],
      "problemType": [
        "CWE-347: Improper Verification of Cryptographic Signature"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-2763",
      "publishedDate": "2025-04-23T16:48:00.717Z",
      "lastModifiedDate": "2025-04-23T18:14:09.276Z",
      "description": "CarlinKit CPC200-CCPA Improper Verification of Cryptographic Signature Code Execution Vulnerability. This vulnerability allows physically present attackers to execute arbitrary code on affected installations of CarlinKit CPC200-CCPA devices. Authentication is not required to exploit this vulnerability.\n\nThe specific flaw exists within the handling of update packages on USB drives. The issue results from the lack of proper verification of a cryptographic signature. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-24356.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://www.zerodayinitiative.com/advisories/ZDI-25-179/",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "CarlinKit",
          "product": "CPC200-CCPA",
          "versions": [
            {
              "version": "2024.01.19.1541",
              "status": "affected"
            }
          ],
          "defaultStatus": "unknown"
        }
      ],
      "problemType": [
        "CWE-347: Improper Verification of Cryptographic Signature"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-1521",
      "publishedDate": "2025-04-23T16:45:32.855Z",
      "lastModifiedDate": "2025-04-23T18:10:39.906Z",
      "description": "PostHog slack_incoming_webhook Server-Side Request Forgery Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of PostHog. Authentication is required to exploit this vulnerability.\n\nThe specific flaw exists within the processing of the slack_incoming_webhook parameter. The issue results from the lack of proper validation of a URI prior to accessing resources. An attacker can leverage this vulnerability to execute code in the context of the service account. Was ZDI-CAN-25352.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://www.zerodayinitiative.com/advisories/ZDI-25-096/",
          "type": "reference"
        },
        {
          "url": "https://github.com/PostHog/posthog/commit/6e8f035f9acd339c5ba87ba6ea40fc1ab3053d42",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "PostHog",
          "product": "PostHog",
          "versions": [
            {
              "version": "b8817c14065c23159dcf52849f0bdcd12516c43e",
              "status": "affected"
            }
          ],
          "defaultStatus": "unknown"
        }
      ],
      "problemType": [
        "CWE-918: Server-Side Request Forgery (SSRF)"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-1520",
      "publishedDate": "2025-04-23T16:45:19.536Z",
      "lastModifiedDate": "2025-04-23T18:13:52.561Z",
      "description": "PostHog ClickHouse Table Functions SQL Injection Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of PostHog. Authentication is required to exploit this vulnerability.\n\nThe specific flaw exists within the implementation of the SQL parser. The issue results from the lack of proper validation of a user-supplied string before using it to construct SQL queries. An attacker can leverage this vulnerability to execute code in the context of the database account. Was ZDI-CAN-25350.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://www.zerodayinitiative.com/advisories/ZDI-25-099/",
          "type": "reference"
        },
        {
          "url": "https://github.com/PostHog/posthog/commit/6e8f035f9acd339c5ba87ba6ea40fc1ab3053d42",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "PostHog",
          "product": "PostHog",
          "versions": [
            {
              "version": "b8817c14065c23159dcf52849f0bdcd12516c43e, clickhouse 23.12.6.19-alpine",
              "status": "affected"
            }
          ],
          "defaultStatus": "unknown"
        }
      ],
      "problemType": [
        "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-1050",
      "publishedDate": "2025-04-23T16:44:54.918Z",
      "lastModifiedDate": "2025-04-23T18:15:44.046Z",
      "description": "Sonos Era 300 Out-of-Bounds Write Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected Sonos Era 300 speakers. Authentication is not required to exploit this vulnerability. \n\nThe specific flaw exists within the processing of HLS playlist data. The issue results from the lack of proper validation of user-supplied data, which can result in a write past the end of an allocated data structure. An attacker can leverage this vulnerability to execute code in the context of the anacapa user. Was ZDI-CAN-25606.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://www.zerodayinitiative.com/advisories/ZDI-25-225/",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "Sonos",
          "product": "Era 300",
          "versions": [
            {
              "version": "81.1-58074",
              "status": "affected"
            }
          ],
          "defaultStatus": "unknown"
        }
      ],
      "problemType": [
        "CWE-787: Out-of-bounds Write"
      ],
      "fix_suggestion": "无法生成修复建议"
    }
  ]
}