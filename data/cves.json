{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "total_count": 5,
    "last_updated": "2025-07-18T15:52:11.334150",
    "severity_distribution": {
      "critical": 0,
      "high": 2,
      "medium": 1,
      "low": 1,
      "none": 1
    }
  },
  "cves": [
    {
      "id": "CVE-2025-54075",
      "publishedDate": "2025-07-18T15:47:38.236Z",
      "lastModifiedDate": "2025-07-18T15:47:38.236Z",
      "description": "MDC is a tool to take regular Markdown and write documents interacting deeply with a Vue component. Prior to version 0.17.2, a remote script-inclusion / stored cross-site scripting vulnerability in @nuxtjs/mdc lets a Markdown author inject a `<base href=\"https://attacker.tld\">` element. The `<base>` tag rewrites how all subsequent relative URLs are resolved, so an attacker can make the page load scripts, styles, or images from an external, attacker-controlled origin and execute arbitrary JavaScript in the site’s context. Version 0.17.2 contains a fix for the issue.",
      "severity": 8.3,
      "references": [
        {
          "url": "https://github.com/nuxt-modules/mdc/security/advisories/GHSA-cj6r-rrr9-fg82",
          "type": "reference"
        },
        {
          "url": "https://github.com/nuxt-modules/mdc/commit/3657a5bf2326a73cd3d906f57149146a412b962a",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "nuxt-modules",
          "product": "mdc",
          "versions": [
            {
              "version": "< 0.17.2",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-54073",
      "publishedDate": "2025-07-18T15:45:09.114Z",
      "lastModifiedDate": "2025-07-18T15:45:09.114Z",
      "description": "mcp-package-docs is an MCP (Model Context Protocol) server that provides LLMs with efficient access to package documentation across multiple programming languages and language server protocol (LSP) capabilities. A command injection vulnerability exists in the `mcp-package-docs` MCP Server prior to the fix in commit cb4ad49615275379fd6f2f1cf1ec4731eec56eb9. The vulnerability is caused by the unsanitized use of input parameters within a call to `child_process.exec`, enabling an attacker to inject arbitrary system commands. Successful exploitation can lead to remote code execution under the server process's privileges. The server constructs and executes shell commands using unvalidated user input directly within command-line strings. This introduces the possibility of shell metacharacter injection (`|`, `>`, `&&`, etc.). Commit cb4ad49615275379fd6f2f1cf1ec4731eec56eb9 in version 0.1.27 contains a fix for the issue, but upgrading to 0.1.28 is recommended.",
      "severity": 7.5,
      "references": [
        {
          "url": "https://github.com/sammcj/mcp-package-docs/security/advisories/GHSA-vf9j-h32g-2764",
          "type": "reference"
        },
        {
          "url": "https://github.com/sammcj/mcp-package-docs/commit/cb4ad49615275379fd6f2f1cf1ec4731eec56eb9",
          "type": "reference"
        },
        {
          "url": "https://equixly.com/blog/2025/03/29/mcp-server-new-security-nightmare",
          "type": "reference"
        },
        {
          "url": "https://github.com/advisories/GHSA-3q26-f695-pp76",
          "type": "reference"
        },
        {
          "url": "https://github.com/advisories/GHSA-5w57-2ccq-8w95",
          "type": "reference"
        },
        {
          "url": "https://github.com/advisories/GHSA-gjv4-ghm7-q58q",
          "type": "reference"
        },
        {
          "url": "https://github.com/sammcj/mcp-package-docs/releases/tag/v0.1.27",
          "type": "reference"
        },
        {
          "url": "https://github.com/sammcj/mcp-package-docs/releases/tag/v0.1.28",
          "type": "reference"
        },
        {
          "url": "https://invariantlabs.ai/blog/mcp-github-vulnerability",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "sammcj",
          "product": "mcp-package-docs",
          "versions": [
            {
              "version": "< 0.1.27",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-54076",
      "publishedDate": "2025-07-18T15:50:56.868Z",
      "lastModifiedDate": "2025-07-18T15:50:56.868Z",
      "description": "WeGIA is an open source web manager with a focus on the Portuguese language and charitable institutions. A Reflected Cross-Site Scripting (XSS) vulnerability was identified in versions prior to 3.4.6 in the `pre_cadastro_atendido.php` endpoint of the WeGIA application. This vulnerability allows attackers to inject malicious scripts in the `msg_e` parameter. Version 3.4.6 fixes the issue.",
      "severity": 6.5,
      "references": [
        {
          "url": "https://github.com/LabRedesCefetRJ/WeGIA/security/advisories/GHSA-vpvf-hffw-4qpc",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "LabRedesCefetRJ",
          "product": "WeGIA",
          "versions": [
            {
              "version": "< 3.4.6",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-7791",
      "publishedDate": "2025-07-18T15:44:06.774Z",
      "lastModifiedDate": "2025-07-18T15:44:06.774Z",
      "description": "A vulnerability was found in PHPGurukul Online Security Guards Hiring System 1.0. It has been declared as problematic. This vulnerability affects unknown code of the file /admin/search.php. The manipulation of the argument searchdata leads to cross site scripting. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.",
      "severity": 3.5,
      "references": [
        {
          "url": "https://vuldb.com/?id.316852",
          "type": "reference"
        },
        {
          "url": "https://vuldb.com/?ctiid.316852",
          "type": "reference"
        },
        {
          "url": "https://vuldb.com/?submit.616217",
          "type": "reference"
        },
        {
          "url": "https://github.com/i-Corner/cve/issues/9",
          "type": "poc"
        },
        {
          "url": "https://phpgurukul.com/",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "PHPGurukul",
          "product": "Online Security Guards Hiring System",
          "versions": [
            {
              "version": "1.0",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "Cross Site Scripting",
        "Code Injection"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-53888",
      "publishedDate": "2025-07-18T15:32:15.856Z",
      "lastModifiedDate": "2025-07-18T15:47:07.789Z",
      "description": "RIOT-OS, an operating system that supports Internet of Things devices, has an ineffective size check implemented with `assert()` can lead to buffer overflow in versions up to and including 2025.04. Assertions are usually compiled out in production builds. If assertions are the only defense against untrusted inputs, the software may be exposed to attacks that utilize the lack of proper input checks. In the `l2filter_add()` function shown below, `addr_len` is checked using an assertion and is subsequently used as an argument in a `memcpy()` call. When assertions are disabled, there would be no size check for `addr_len`. As a consequence, if an attacker were to provide an `addr_len` value larger than `CONFIG_L2FILTER_ADDR_MAXLEN`, they can trigger a buffer overflow and write past the `list[i].addr` buffer. If the unchecked input is attacker-controlled, the impact of the buffer overflow can range from a denial of service to arbitrary code execution. Commit f6f7de4ccc107c018630e4c15500825caf02e1c2 contains a patch for the vulnerability.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/RIOT-OS/RIOT/security/advisories/GHSA-7972-w7f9-3j9m",
          "type": "reference"
        },
        {
          "url": "https://github.com/RIOT-OS/RIOT/commit/f6f7de4ccc107c018630e4c15500825caf02e1c2",
          "type": "reference"
        },
        {
          "url": "https://github.com/RIOT-OS/RIOT/blob/2025.04/sys/net/link_layer/l2filter/l2filter.c#L47",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "RIOT-OS",
          "product": "RIOT",
          "versions": [
            {
              "version": "<= 2025.04",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')"
      ],
      "fix_suggestion": "无法生成修复建议"
    }
  ]
}