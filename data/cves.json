{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "total_count": 6,
    "last_updated": "2025-08-07T00:47:17.574273",
    "severity_distribution": {
      "critical": 0,
      "high": 1,
      "medium": 0,
      "low": 1,
      "none": 4
    }
  },
  "cves": [
    {
      "id": "CVE-2025-54882",
      "publishedDate": "2025-08-07T00:02:09.263Z",
      "lastModifiedDate": "2025-08-07T00:02:09.263Z",
      "description": "Himmelblau is an interoperability suite for Microsoft Azure Entra ID and Intune. In versions 0.8.0 through 0.9.21 and 1.0.0-beta through 1.1.0, Himmelblau stores the cloud TGT received during logon in the Kerberos credential cache. The created credential cache collection and received credentials are stored as world readable. This is fixed in versions 0.9.22 and 1.2.0. To work around this issue, remove all read access to Himmelblau caches for all users except for owners.",
      "severity": 7.1,
      "references": [
        {
          "url": "https://github.com/himmelblau-idm/himmelblau/security/advisories/GHSA-phfx-rjfw-wj83",
          "type": "reference"
        },
        {
          "url": "https://github.com/himmelblau-idm/himmelblau/commit/b562053df3dffb1dd9ab3d09af986886773be2ad",
          "type": "reference"
        },
        {
          "url": "https://github.com/himmelblau-idm/himmelblau/commit/faae58b0384aca8b21b4be5f1c507412eec3778a",
          "type": "reference"
        },
        {
          "url": "https://github.com/himmelblau-idm/himmelblau/releases/tag/0.9.22",
          "type": "reference"
        },
        {
          "url": "https://github.com/himmelblau-idm/himmelblau/releases/tag/1.2.0",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "himmelblau-idm",
          "product": "himmelblau",
          "versions": [
            {
              "version": ">= 0.8.0, < 0.9.22",
              "status": "affected"
            },
            {
              "version": ">= 1.0.0-beta, < 1.2.0",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-522: Insufficiently Protected Credentials"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-54798",
      "publishedDate": "2025-08-07T00:04:35.370Z",
      "lastModifiedDate": "2025-08-07T00:04:35.370Z",
      "description": "tmp is a temporary file and directory creator for node.js. In versions 0.2.3 and below, tmp is vulnerable to an arbitrary temporary file / directory write via symbolic link dir parameter. This is fixed in version 0.2.4.",
      "severity": 2.5,
      "references": [
        {
          "url": "https://github.com/raszi/node-tmp/security/advisories/GHSA-52f5-9888-hmc6",
          "type": "reference"
        },
        {
          "url": "https://github.com/raszi/node-tmp/issues/207",
          "type": "reference"
        },
        {
          "url": "https://github.com/raszi/node-tmp/commit/188b25e529496e37adaf1a1d9dccb40019a08b1b",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "raszi",
          "product": "node-tmp",
          "versions": [
            {
              "version": "< 0.2.4",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-59: Improper Link Resolution Before File Access ('Link Following')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-54784",
      "publishedDate": "2025-08-07T00:07:07.525Z",
      "lastModifiedDate": "2025-08-07T00:07:07.525Z",
      "description": "SuiteCRM is an open-source, enterprise-ready Customer Relationship Management (CRM) software application. There is a Cross Site Scripting (XSS) vulnerability in the email viewer in versions 7.14.0 through 7.14.6. An external attacker could send a prepared message to the inbox of the SuiteCRM-instance. By simply viewing emails as the logged-in user, the payload can be triggered. With that, an attacker is able to run arbitrary actions as the logged-in user - like extracting data, or if it is an admin executing the payload, takeover the instance. This is fixed in versions 7.14.7.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/SuiteCRM/SuiteCRM/security/advisories/GHSA-vg8q-xcq5-mh3p",
          "type": "reference"
        },
        {
          "url": "https://docs.suitecrm.com/admin/releases/7.14.x/#_7_14_7",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "SuiteCRM",
          "product": "SuiteCRM",
          "versions": [
            {
              "version": ">= 7.14.0, < 7.14.7",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-54783",
      "publishedDate": "2025-08-07T00:05:11.823Z",
      "lastModifiedDate": "2025-08-07T00:05:11.823Z",
      "description": "SuiteCRM is an open-source, enterprise-ready Customer Relationship Management (CRM) software application. Versions 7.14.6 and below have a Reflected Cross-Site Scripting (XSS) vulnerability. This vulnerability allows an attacker to execute JavaScript code by modifying the HTTP Referer header to include some arbitrary domain with malicious JavaScript code at the end. The server will attempt to block the arbitrary domain but allow the JavaScript code to execute. This is fixed in version 7.14.7.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/SuiteCRM/SuiteCRM/security/advisories/GHSA-vqrj-gp9m-8c6r",
          "type": "reference"
        },
        {
          "url": "https://docs.suitecrm.com/admin/releases/7.14.x/#_7_14_7",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "SuiteCRM",
          "product": "SuiteCRM",
          "versions": [
            {
              "version": "< 7.14.7",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-54799",
      "publishedDate": "2025-08-07T00:04:14.718Z",
      "lastModifiedDate": "2025-08-07T00:04:14.718Z",
      "description": "Let's Encrypt client and ACME library written in Go (Lego). In versions 4.25.1 and below, the github.com/go-acme/lego/v4/acme/api package (thus the lego library and the lego cli as well) don't enforce HTTPS when talking to CAs as an ACME client. Unlike the http-01 challenge which solves an ACME challenge over unencrypted HTTP, the ACME protocol requires HTTPS when a client communicates with the CA to performs ACME functions. However, the library fails to enforce HTTPS both in the original discover URL (configured by the library user) and in the subsequent addresses returned by the CAs in the directory and order objects. If users input HTTP URLs or CAs misconfigure endpoints, protocol operations occur over HTTP instead of HTTPS. This compromises privacy by exposing request/response details like account and request identifiers to network attackers. This was fixed in version 4.25.2.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/go-acme/lego/security/advisories/GHSA-q82r-2j7m-9rv4",
          "type": "reference"
        },
        {
          "url": "https://github.com/go-acme/lego/commit/238454b5f74f3cfcbb244ff0d0dc914a4ad44b96",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "go-acme",
          "product": "lego",
          "versions": [
            {
              "version": "< 4.25.2",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-319: Cleartext Transmission of Sensitive Information"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-54885",
      "publishedDate": "2025-08-07T00:02:42.612Z",
      "lastModifiedDate": "2025-08-07T00:02:42.612Z",
      "description": "Thinbus Javascript Secure Remote Password is a browser SRP6a implementation for zero-knowledge password authentication. In versions 2.0.0 and below, a protocol compliance bug causes the client to generate a fixed 252 bits of entropy instead of the intended bit length of the safe prime (defaulted to 2048 bits). The client public value is being generated from a private value that is 4 bits below the specification. This reduces the protocol's designed security margin it is now practically exploitable. The servers full sized 2048 bit random number is used to create the shared session key and password proof. This is fixed in version 2.0.1.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/simbo1905/thinbus-srp-npm/security/advisories/GHSA-8q6v-474h-whgg",
          "type": "reference"
        },
        {
          "url": "https://github.com/simbo1905/thinbus-srp-npm/issues/28",
          "type": "reference"
        },
        {
          "url": "https://github.com/simbo1905/thinbus-srp-npm/pull/30/commits/4aeaea2366e090765a8204059c7bcf3616438d31",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "simbo1905",
          "product": "thinbus-srp-npm",
          "versions": [
            {
              "version": "< 2.0.1",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-331: Insufficient Entropy"
      ],
      "fix_suggestion": "无法生成修复建议"
    }
  ]
}