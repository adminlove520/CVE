{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "total_count": 6,
    "last_updated": "2025-02-21T21:20:12.571339",
    "severity_distribution": {
      "critical": 0,
      "high": 2,
      "medium": 0,
      "low": 0,
      "none": 4
    }
  },
  "cves": [
    {
      "id": "CVE-2025-27109",
      "publishedDate": "2025-02-21T21:12:58.218Z",
      "lastModifiedDate": "2025-02-21T21:12:58.218Z",
      "description": "solid-js is a declarative, efficient, and flexible JavaScript library for building user interfaces. In affected versions Inserts/JSX expressions inside illegal inlined JSX fragments lacked escaping, allowing user input to be rendered as HTML when put directly inside JSX fragments. This issue has been addressed in version 1.9.4 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
      "severity": 7.3,
      "references": [
        {
          "url": "https://github.com/solidjs/solid/security/advisories/GHSA-3qxh-p7jc-5xh6",
          "type": "reference"
        },
        {
          "url": "https://github.com/solidjs/solid/commit/b93956f28ed75469af6976a98728e313d0edd236",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "solidjs",
          "product": "solid",
          "versions": [
            {
              "version": "< 1.9.4",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-116: Improper Encoding or Escaping of Output",
        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-27108",
      "publishedDate": "2025-02-21T21:09:48.818Z",
      "lastModifiedDate": "2025-02-21T21:09:48.818Z",
      "description": "dom-expressions is a Fine-Grained Runtime for Performant DOM Rendering. In affected versions the use of javascript's `.replace()` opens up to potential Cross-site Scripting (XSS) vulnerabilities with the special replacement patterns beginning with `$`. Particularly, when the attributes of `Meta` tag from solid-meta are user-defined, attackers can utilise the special replacement patterns, either `$'` or `$\\`` to achieve XSS. The solid-meta package has this issue since it uses `useAffect` and context providers, which injects the used assets in the html header. \"dom-expressions\" uses `.replace()` to insert the assets, which is vulnerable to the special replacement patterns listed above.  This effectively means that if the attributes of an asset tag contained user-controlled data, it would be vulnerable to XSS. For instance, there might be meta tags for the open graph protocol in a user profile page, but if attackers set the user query to some payload abusing `.replace()`, then they could execute arbitrary javascript in the victim's web browser. Moreover, it could be stored and cause more problems. This issue has been addressed in version 0.39.5 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
      "severity": 7.3,
      "references": [
        {
          "url": "https://github.com/ryansolid/dom-expressions/security/advisories/GHSA-hw62-58pr-7wc5",
          "type": "reference"
        },
        {
          "url": "https://github.com/ryansolid/dom-expressions/commit/521f75dfa89ed24161646e7007d9d7d21da07767",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "ryansolid",
          "product": "dom-expressions",
          "versions": [
            {
              "version": "< 0.39.5",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
        "CWE-116: Improper Encoding or Escaping of Output"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2019-8900",
      "publishedDate": "2025-02-21T21:17:41.417Z",
      "lastModifiedDate": "2025-02-21T21:17:41.417Z",
      "description": "A vulnerability in the SecureROM of some Apple devices can be exploited by an unauthenticated local attacker to execute arbitrary code upon booting those devices. This vulnerability allows arbitrary code to be executed on the device. Exploiting the vulnerability requires physical access to the device: the device must be plugged in to a computer upon booting, and it must be put into Device Firmware Update (DFU) mode. The exploit is not persistent; rebooting the device overrides any changes to the device's software that were made during an exploited session on the device. Additionally, unless an attacker has access to the device's unlock PIN or fingerprint, an attacker cannot gain access to information protected by Apple's Secure Enclave or Touch ID features.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://www.kb.cert.org/vuls/id/941987",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "defaultStatus": "unaffected",
          "product": "SecureROM",
          "vendor": "Apple",
          "versions": [
            {
              "lessThanOrEqual": "A11",
              "status": "affected",
              "version": "A5",
              "versionType": "custom"
            }
          ]
        }
      ],
      "problemType": [],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-25877",
      "publishedDate": "2025-02-21T00:00:00.000Z",
      "lastModifiedDate": "2025-02-21T21:12:34.247Z",
      "description": "A vulnerability was found in ITSourcecode Simple ChatBox up to 1.0. This vulnerability affects unknown code of the file /admin.php. The attack can use SQL injection to obtain sensitive data.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/SticKManII/cve-poc/blob/main/chat-box/1/poc.md",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "n/a",
          "product": "n/a",
          "versions": [
            {
              "version": "n/a",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "n/a"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-25878",
      "publishedDate": "2025-02-21T00:00:00.000Z",
      "lastModifiedDate": "2025-02-21T21:11:22.224Z",
      "description": "A vulnerability was found in ITSourcecode Simple ChatBox up to 1.0. This vulnerability affects unknown code of the file /del.php. The attack can use SQL injection to obtain sensitive data.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/SticKManII/cve-poc/blob/main/chat-box/3/poc.md",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "n/a",
          "product": "n/a",
          "versions": [
            {
              "version": "n/a",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "n/a"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-25772",
      "publishedDate": "2025-02-21T00:00:00.000Z",
      "lastModifiedDate": "2025-02-21T21:09:45.613Z",
      "description": "A Cross-Site Request Forgery (CSRF) in the component /back/UserController.java of Jspxcms v9.0 to v9.5 allows attackers to arbitrarily add Administrator accounts via a crafted request.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://www.yuque.com/u123456789-6sobi/cdgcbq/pkwoqmkamcm9854r?singleDoc#%E3%80%8AjspXcms_csrf%E3%80%8B",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "n/a",
          "product": "n/a",
          "versions": [
            {
              "version": "n/a",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "n/a"
      ],
      "fix_suggestion": "无法生成修复建议"
    }
  ]
}