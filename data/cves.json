{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "total_count": 8,
    "last_updated": "2025-03-20T13:46:51.034839",
    "severity_distribution": {
      "critical": 0,
      "high": 1,
      "medium": 0,
      "low": 1,
      "none": 6
    }
  },
  "cves": [
    {
      "id": "CVE-2024-13923",
      "publishedDate": "2025-03-20T11:11:25.619Z",
      "lastModifiedDate": "2025-03-20T13:35:42.204Z",
      "description": "The Order Export & Order Import for WooCommerce plugin for WordPress is vulnerable to Server-Side Request Forgery in all versions up to, and including, 2.6.0 via the validate_file() function. This makes it possible for authenticated attackers, with Administrator-level access and above, to make web requests to arbitrary locations originating from the web application and can be used to query and modify information from internal services.",
      "severity": 7.6,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/3283b3ff-1787-466b-9517-84bd715e4165?source=cve",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/browser/order-import-export-for-woocommerce/trunk/admin/modules/import/classes/class-import-ajax.php#L175",
          "type": "reference"
        },
        {
          "url": "https://wordpress.org/plugins/order-import-export-for-woocommerce/#developers",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/changeset/3258567/",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "webtoffee",
          "product": "Order Export & Order Import for WooCommerce",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "2.6.0",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-918 Server-Side Request Forgery (SSRF)"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2024-13922",
      "publishedDate": "2025-03-20T11:11:26.177Z",
      "lastModifiedDate": "2025-03-20T13:32:50.187Z",
      "description": "The Order Export & Order Import for WooCommerce plugin for WordPress is vulnerable to arbitrary file deletion due to insufficient file path validation in the admin_log_page() function in all versions up to, and including, 2.6.0. This makes it possible for authenticated attackers, with Administrator-level access and above, to delete arbitrary log files on the server.",
      "severity": 2.7,
      "references": [
        {
          "url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/4eb8f85f-656a-4e5a-a57d-7289da2cd951?source=cve",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/browser/order-import-export-for-woocommerce/trunk/admin/modules/history/history.php#L248",
          "type": "reference"
        },
        {
          "url": "https://wordpress.org/plugins/product-import-export-for-woo/#developers",
          "type": "reference"
        },
        {
          "url": "https://plugins.trac.wordpress.org/changeset/3258567/",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "webtoffee",
          "product": "Order Export & Order Import for WooCommerce",
          "versions": [
            {
              "version": "*",
              "status": "affected",
              "lessThanOrEqual": "2.6.0",
              "versionType": "semver"
            }
          ],
          "defaultStatus": "unaffected"
        }
      ],
      "problemType": [
        "CWE-73 External Control of File Name or Path"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2024-11043",
      "publishedDate": "2025-03-20T10:11:14.925Z",
      "lastModifiedDate": "2025-03-20T13:32:48.412Z",
      "description": "A Denial of Service (DoS) vulnerability was discovered in the /api/v1/boards/{board_id} endpoint of invoke-ai/invokeai version v5.0.2. This vulnerability occurs when an excessively large payload is sent in the board_name field during a PATCH request. By sending a large payload, the UI becomes unresponsive, rendering it impossible for users to interact with or manage the affected board. Additionally, the option to delete the board becomes inaccessible, amplifying the severity of the issue.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://huntr.com/bounties/9270900a-b8b7-402f-aee5-432d891e5648",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "invoke-ai",
          "product": "invoke-ai/invokeai",
          "versions": [
            {
              "version": "unspecified",
              "status": "affected",
              "versionType": "custom",
              "lessThanOrEqual": "latest"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-400 Uncontrolled Resource Consumption"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2024-10948",
      "publishedDate": "2025-03-20T10:11:08.455Z",
      "lastModifiedDate": "2025-03-20T13:33:45.575Z",
      "description": "A vulnerability in the upload function of binary-husky/gpt_academic allows any user to read arbitrary files on the system, including sensitive files such as `config.py`. This issue affects the latest version of the product. An attacker can exploit this vulnerability by intercepting the websocket request during file upload and replacing the file path with the path of the file they wish to read. The server then copies the file to the `private_upload` folder and provides the path to the copied file, which can be accessed via a GET request. This vulnerability can lead to the exposure of sensitive system files, potentially including credentials, configuration files, or sensitive user data.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://huntr.com/bounties/290a379d-8441-4292-a553-3587e8c5c729",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "binary-husky",
          "product": "binary-husky/gpt_academic",
          "versions": [
            {
              "version": "unspecified",
              "status": "affected",
              "versionType": "custom",
              "lessThanOrEqual": "latest"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2024-9612",
      "publishedDate": "2025-03-20T10:11:08.077Z",
      "lastModifiedDate": "2025-03-20T13:34:33.986Z",
      "description": "In danswer-ai/danswer v0.3.94, administrators can set the visibility of pages within a workspace, including the search page. When the search page is set to be invisible, regular users cannot view the search page or access its functionalities from the front-end interface. However, the back-end does not verify the visibility status of the search page. Consequently, attackers can directly call the API to access the functionalities provided by the search page, bypassing the visibility restriction set by the administrator.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://huntr.com/bounties/c1046fa0-a719-475e-ba62-2b97873fbac4",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "danswer-ai",
          "product": "danswer-ai/danswer",
          "versions": [
            {
              "version": "unspecified",
              "status": "affected",
              "versionType": "custom",
              "lessThanOrEqual": "latest"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-1100 Insufficient Isolation of System-Dependent Functions"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2024-10721",
      "publishedDate": "2025-03-20T10:11:07.493Z",
      "lastModifiedDate": "2025-03-20T13:35:03.620Z",
      "description": "A stored cross-site scripting (XSS) vulnerability was discovered in phpipam/phpipam version 1.5.2. This vulnerability allows an attacker to inject malicious scripts into the application, which can be executed in the context of other users who view the affected page. The issue occurs in the circuits options page (https://demo.phpipam.net/tools/circuits/options/). An attacker can exploit this vulnerability to steal cookies, gain unauthorized access to user accounts, or redirect users to malicious websites. The vulnerability has been fixed in version 1.7.0.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://huntr.com/bounties/a440a003-84c9-47b5-bfbd-675564abe3d8",
          "type": "reference"
        },
        {
          "url": "https://github.com/phpipam/phpipam/commit/c1697bb6c4e4a6403d69c0868e1eb1040f98b731",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "phpipam",
          "product": "phpipam/phpipam",
          "versions": [
            {
              "version": "unspecified",
              "lessThan": "1.7.0",
              "status": "affected",
              "versionType": "custom"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2024-12871",
      "publishedDate": "2025-03-20T10:11:07.129Z",
      "lastModifiedDate": "2025-03-20T13:35:32.904Z",
      "description": "An XSS vulnerability in infiniflow/ragflow version 0.12.0 allows an attacker to upload a malicious PDF file to the knowledge base. When the file is viewed within Ragflow, the payload is executed in the context of the user's browser. This can lead to session hijacking, data exfiltration, or unauthorized actions performed on behalf of the victim, compromising sensitive user data and affecting the integrity of the entire application.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://huntr.com/bounties/7903945c-2839-4dd5-9d40-9ef47fe53118",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "infiniflow",
          "product": "infiniflow/ragflow",
          "versions": [
            {
              "version": "unspecified",
              "status": "affected",
              "versionType": "custom",
              "lessThanOrEqual": "latest"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-29410",
      "publishedDate": "2025-03-20T00:00:00.000Z",
      "lastModifiedDate": "2025-03-20T13:35:42.287Z",
      "description": "A cross-site scripting (XSS) vulnerability in the component /contact.php of Hospital Management System v1.0 allows attackers to execute arbitrary web scripts or HTML via injecting a crafted payload into the txtEmail parameter.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/kishan0725/Hospital-Management-System/issues/49",
          "type": "reference"
        },
        {
          "url": "https://www.simonjuguna.com/cve-2025-29410-hospital-management-system-xss-vulnerability/",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "n/a",
          "product": "n/a",
          "versions": [
            {
              "version": "n/a",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "n/a"
      ],
      "fix_suggestion": "无法生成修复建议"
    }
  ]
}