{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "total_count": 5,
    "last_updated": "2025-08-08T00:49:40.121904",
    "severity_distribution": {
      "critical": 1,
      "high": 1,
      "medium": 2,
      "low": 0,
      "none": 1
    }
  },
  "cves": [
    {
      "id": "CVE-2025-54887",
      "publishedDate": "2025-08-08T00:06:20.021Z",
      "lastModifiedDate": "2025-08-08T00:06:20.021Z",
      "description": "jwe is a Ruby implementation of the RFC 7516 JSON Web Encryption (JWE) standard. In versions 1.1.0 and below, authentication tags of encrypted JWEs can be brute forced, which may result in loss of confidentiality for those JWEs and provide ways to craft arbitrary JWEs. This puts users at risk because JWEs can be modified to decrypt to an arbitrary value, decrypted by observing parsing differences and the GCM internal GHASH key can be recovered. Users are affected by this vulnerability even if they do not use an AES-GCM encryption algorithm for their JWEs. As the GHASH key may have been leaked, users must rotate the encryption keys after upgrading. This issue is fixed in version 1.1.1.",
      "severity": 9.1,
      "references": [
        {
          "url": "https://github.com/jwt/ruby-jwe/security/advisories/GHSA-c7p4-hx26-pr73",
          "type": "reference"
        },
        {
          "url": "https://github.com/jwt/ruby-jwe/commit/1e719d79ba3d7aadaa39a2f08c25df077a0f9ff1",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "jwt",
          "product": "ruby-jwe",
          "versions": [
            {
              "version": "< 1.1.1",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-354: Improper Validation of Integrity Check Value"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-54886",
      "publishedDate": "2025-08-08T00:03:45.318Z",
      "lastModifiedDate": "2025-08-08T00:03:45.318Z",
      "description": "skops is a Python library which helps users share and ship their scikit-learn based models. In versions 0.12.0 and below, the Card.get_model does not contain any logic to prevent arbitrary code execution. The Card.get_model function supports both joblib and skops for model loading. When loading .skops models, it uses skops' secure loading with trusted type validation, raising errors for untrusted types unless explicitly allowed. However, when non-.zip file formats are provided, the function silently falls back to joblib without warning. Unlike skops, joblib allows arbitrary code execution during loading, bypassing security measures and potentially enabling malicious code execution. This issue is fixed in version 0.13.0.",
      "severity": 8.4,
      "references": [
        {
          "url": "https://github.com/skops-dev/skops/security/advisories/GHSA-378x-6p4f-8jgm",
          "type": "reference"
        },
        {
          "url": "https://github.com/skops-dev/skops/commit/29d61ea8a92f2bde6830e8f32cc72a1a87211cda",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "skops-dev",
          "product": "skops",
          "versions": [
            {
              "version": "< 0.13.0",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-502: Deserialization of Untrusted Data"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-8704",
      "publishedDate": "2025-08-08T00:32:05.875Z",
      "lastModifiedDate": "2025-08-08T00:32:05.875Z",
      "description": "A vulnerability, which was classified as critical, has been found in Wanzhou WOES Intelligent Optimization Energy Saving System 1.0. This issue affects some unknown processing of the file /WEAS_AlarmResult/GetAlarmResultProcessList of the component Analysis Conclusion Query Module. The manipulation of the argument resultId leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used.",
      "severity": 6.3,
      "references": [
        {
          "url": "https://vuldb.com/?id.319133",
          "type": "reference"
        },
        {
          "url": "https://vuldb.com/?ctiid.319133",
          "type": "reference"
        },
        {
          "url": "https://vuldb.com/?submit.621279",
          "type": "reference"
        },
        {
          "url": "https://github.com/si12/xxx/issues/4",
          "type": "poc"
        }
      ],
      "affected": [
        {
          "vendor": "Wanzhou",
          "product": "WOES Intelligent Optimization Energy Saving System",
          "versions": [
            {
              "version": "1.0",
              "status": "affected"
            }
          ],
          "modules": [
            "Analysis Conclusion Query Module"
          ]
        }
      ],
      "problemType": [
        "SQL Injection",
        "Injection"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-8703",
      "publishedDate": "2025-08-08T00:02:06.332Z",
      "lastModifiedDate": "2025-08-08T00:02:06.332Z",
      "description": "A vulnerability classified as critical was found in Wanzhou WOES Intelligent Optimization Energy Saving System 1.0. This vulnerability affects unknown code of the file /WEAS_HomePage/GetAreaTrendChartData of the component Environmental Real-Time Data Module. The manipulation of the argument energyId leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.",
      "severity": 6.3,
      "references": [
        {
          "url": "https://vuldb.com/?id.319132",
          "type": "reference"
        },
        {
          "url": "https://vuldb.com/?ctiid.319132",
          "type": "reference"
        },
        {
          "url": "https://vuldb.com/?submit.621278",
          "type": "reference"
        },
        {
          "url": "https://github.com/si12/xxx/issues/3",
          "type": "poc"
        }
      ],
      "affected": [
        {
          "vendor": "Wanzhou",
          "product": "WOES Intelligent Optimization Energy Saving System",
          "versions": [
            {
              "version": "1.0",
              "status": "affected"
            }
          ],
          "modules": [
            "Environmental Real-Time Data Module"
          ]
        }
      ],
      "problemType": [
        "SQL Injection",
        "Injection"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-54793",
      "publishedDate": "2025-08-08T00:02:38.299Z",
      "lastModifiedDate": "2025-08-08T00:02:38.299Z",
      "description": "Astro is a web framework for content-driven websites. In versions 5.2.0 through 5.12.7, there is an Open Redirect vulnerability in the trailing slash redirection logic when handling paths with double slashes. This allows an attacker to redirect users to arbitrary external domains by crafting URLs such as https://mydomain.com//malicious-site.com/. This increases the risk of phishing and other social engineering attacks. This affects sites that use on-demand rendering (SSR) with the Node or Cloudflare adapters. It does not affect static sites, or sites deployed to Netlify or Vercel. This issue is fixed in version 5.12.8. To work around this issue at the network level, block outgoing redirect responses with a Location header value that starts with `//`.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/withastro/astro/security/advisories/GHSA-cq8c-xv66-36gw",
          "type": "reference"
        },
        {
          "url": "https://github.com/withastro/astro/commit/0567fb7b50c0c452be387dd7c7264b96bedab48f",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "withastro",
          "product": "astro",
          "versions": [
            {
              "version": ">= 5.2.0, < 5.12.8",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
      ],
      "fix_suggestion": "无法生成修复建议"
    }
  ]
}