{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "total_count": 2,
    "last_updated": "2025-10-10T22:20:44.191479",
    "severity_distribution": {
      "critical": 0,
      "high": 0,
      "medium": 1,
      "low": 0,
      "none": 1
    }
  },
  "cves": [
    {
      "id": "CVE-2025-52647",
      "publishedDate": "2025-10-10T22:14:50.101Z",
      "lastModifiedDate": "2025-10-10T22:14:50.101Z",
      "description": "The BigFix WebUI application responds with HOST information from the HTTP header field making it vulnerable to Host Header Poisoning Attacks.",
      "severity": 6.1,
      "references": [
        {
          "url": "https://support.hcl-software.com/csm?id=kb_article&sysparm_article=KB0124562",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "defaultStatus": "unaffected",
          "product": "BigFix WebUI",
          "vendor": "HCL Software",
          "versions": [
            {
              "status": "affected",
              "version": "v11"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-644 Improper Neutralization of HTTP Headers for Scripting Syntax"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-52885",
      "publishedDate": "2025-10-10T22:11:20.494Z",
      "lastModifiedDate": "2025-10-10T22:11:20.494Z",
      "description": "Poppler ia a library for rendering PDF files, and examining or modifying their structure. A use-after-free (write) vulnerability has been detected in versions Poppler prior to 25.10.0 within the StructTreeRoot class. The issue arises from the use of raw pointers to elements of a `std::vector`, which can lead to dangling pointers when the vector is resized. The vulnerability stems from the way that refToParentMap stores references to `std::vector` elements using raw pointers. These pointers may become invalid when the vector is resized. This vulnerability is a common security problem involving the use of raw pointers to `std::vectors`. Internally, `std::vector `stores its elements in a dynamically allocated array. When the array reaches its capacity and a new element is added, the vector reallocates a larger block of memory and moves all the existing elements to the new location. At this point if any pointers to elements are stored before a resize occurs, they become dangling pointers once the reallocation happens. Version 25.10.0 contains a patch for the issue.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://securitylab.github.com/advisories/GHSL-2025-042_poppler/",
          "type": "reference"
        },
        {
          "url": "https://gitlab.freedesktop.org/poppler/poppler/-/merge_requests/1884",
          "type": "reference"
        },
        {
          "url": "https://gitlab.freedesktop.org/poppler/poppler/-/merge_requests/1884#note_3114334",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "poppler",
          "product": "poppler",
          "versions": [
            {
              "version": "< 25.10.0",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-416: Use After Free"
      ],
      "fix_suggestion": "无法生成修复建议"
    }
  ]
}