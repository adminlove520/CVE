{
  "dataType": "CVE_RECORD",
  "dataVersion": "5.1",
  "cveMetadata": {
    "total_count": 5,
    "last_updated": "2025-10-03T13:32:00.574886",
    "severity_distribution": {
      "critical": 0,
      "high": 0,
      "medium": 2,
      "low": 0,
      "none": 3
    }
  },
  "cves": [
    {
      "id": "CVE-2025-10609",
      "publishedDate": "2025-10-03T12:02:41.289Z",
      "lastModifiedDate": "2025-10-03T13:25:52.937Z",
      "description": "Use of Hard-coded Credentials vulnerability in Logo Software Inc. TigerWings ERP allows Read Sensitive Constants Within an Executable.This issue affects TigerWings ERP: before 3.03.00.",
      "severity": 5.9,
      "references": [
        {
          "url": "https://www.usom.gov.tr/bildirim/tr-25-0313",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "defaultStatus": "unaffected",
          "product": "TigerWings ERP",
          "vendor": "Logo Software Inc.",
          "versions": [
            {
              "lessThan": "3.03.00",
              "status": "affected",
              "version": "0",
              "versionType": "custom"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-798 Use of Hard-coded Credentials"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-61589",
      "publishedDate": "2025-10-03T06:48:30.926Z",
      "lastModifiedDate": "2025-10-03T13:23:17.983Z",
      "description": "Cursor is a code editor built for programming with AI. In versions 1.6 and below, Mermaid (a to render diagrams) allows embedding images which then get rendered by Cursor in the chat box. An attacker can use this to exfiltrate sensitive information to a third-party attacker controlled server through an image fetch after successfully performing a prompt injection. A malicious model (or hallucination/backdoor) might also trigger this exploit at will. This issue requires prompt injection from malicious data (web, image upload, source code) in order to exploit. In that case, it can send sensitive information to an attacker-controlled external server. Some additional bypasses not covered in the initial fix to this issue were discovered, see GHSA-43wj-mwcc-x93p. This issue is fixed in version 1.7.",
      "severity": 5.9,
      "references": [
        {
          "url": "https://github.com/cursor/cursor/security/advisories/GHSA-xw2x-252g-97w2",
          "type": "reference"
        },
        {
          "url": "https://github.com/cursor/cursor/security/advisories/GHSA-43wj-mwcc-x93p",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "cursor",
          "product": "cursor",
          "versions": [
            {
              "version": "< 1.7",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-200: Exposure of Sensitive Information to an Unauthorized Actor"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-59536",
      "publishedDate": "2025-10-03T06:34:48.398Z",
      "lastModifiedDate": "2025-10-03T13:26:23.309Z",
      "description": "Claude Code is an agentic coding tool. Versions before 1.0.111 were vulnerable to Code Injection due to a bug in the startup trust dialog implementation. Claude Code could be tricked to execute code contained in a project before the user accepted the startup trust dialog. Exploiting this requires a user to start Claude Code in an untrusted directory. Users on standard Claude Code auto-update will have received this fix automatically. Users performing manual updates are advised to update to the latest version. This issue is fixed in version 1.0.111.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/anthropics/claude-code/security/advisories/GHSA-4fgq-fpq9-mr3g",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "anthropics",
          "product": "claude-code",
          "versions": [
            {
              "version": "< 1.0.111",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-94: Improper Control of Generation of Code ('Code Injection')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-61599",
      "publishedDate": "2025-10-03T06:27:46.228Z",
      "lastModifiedDate": "2025-10-03T13:30:16.657Z",
      "description": "Emlog is an open source website building system. A stored Cross-Site Scripting (XSS) vulnerability exists in the \"Twitter\"feature of EMLOG Pro 2.5.21 and below. An authenticated user with privileges to post a \"Twitter\" message can inject arbitrary JavaScript code. The malicious script is stored on the server and gets executed in the browser of any user, including administrators, when they click on the malicious post to view it. This issue does not currently have a fix.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://github.com/emlog/emlog/security/advisories/GHSA-rm5c-mjpg-vm89",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "emlog",
          "product": "emlog",
          "versions": [
            {
              "version": "<= 2.5.21",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
      ],
      "fix_suggestion": "无法生成修复建议"
    },
    {
      "id": "CVE-2025-59489",
      "publishedDate": "2025-10-03T00:00:00.000Z",
      "lastModifiedDate": "2025-10-03T13:26:11.124Z",
      "description": "Unity Editor 2019.1 through 6000.3 could allow remote attackers to exploit file loading and Local File Inclusion (LFI) mechanisms via a crafted local application because of an Untrusted Search Path. This could permit unauthorized manipulation of runtime resources and third-party integrations. The issue could affect applications built using Unity and deployed across Android, Windows, macOS, and Linux platforms.",
      "severity": "N/A",
      "references": [
        {
          "url": "https://unity.com/security#security-updates-and-patches",
          "type": "reference"
        },
        {
          "url": "https://unity.com/security/sept-2025-01",
          "type": "reference"
        },
        {
          "url": "https://flatt.tech/research/posts/arbitrary-code-execution-in-unity-runtime/",
          "type": "reference"
        }
      ],
      "affected": [
        {
          "vendor": "n/a",
          "product": "n/a",
          "versions": [
            {
              "version": "n/a",
              "status": "affected"
            }
          ]
        }
      ],
      "problemType": [
        "n/a"
      ],
      "fix_suggestion": "无法生成修复建议"
    }
  ]
}